"use strict";(self.webpackChunkui_react=self.webpackChunkui_react||[]).push([[7267],{44349:(e,t,i)=>{i.d(t,{e:()=>o});const o=(0,i(72065).yh)("labelService")},34277:(e,t,i)=>{i.d(t,{F:()=>o});const o=(0,i(72065).yh)("layoutService")},32414:(e,t,i)=>{i.d(t,{CQ:()=>D,Lw:()=>O,PF:()=>be,PS:()=>_,XN:()=>F,ls:()=>we,uJ:()=>L});var o=i(65321),s=i(95210),n=i(43799),l=i(1812),r=i(5637),a=i(6126),c=i(32481),d=i(16354),h=i(4669),u=i(5976),g=i(63580),p=i(33108),S=i(23193),f=i(93983),y=i(39282),v=i(5606),b=i(72065),m=i(91847),C=i(89872),w=i(86253),k=function(e,t,i,o){var s,n=arguments.length,l=n<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,i):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,i,o);else for(var r=e.length-1;r>=0;r--)(s=e[r])&&(l=(n<3?s(l):n>3?s(t,i,l):s(t,i))||l);return n>3&&l&&Object.defineProperty(t,i,l),l},M=function(e,t){return function(i,o){t(i,o,e)}};const O=(0,b.yh)("listService");class F{get lastFocusedList(){return this._lastFocusedWidget}constructor(){this.disposables=new u.SL,this.lists=[],this._lastFocusedWidget=void 0,this._hasCreatedStyleController=!1}setLastFocusedList(e){var t,i;e!==this._lastFocusedWidget&&(null===(t=this._lastFocusedWidget)||void 0===t||t.getHTMLElement().classList.remove("last-focused"),this._lastFocusedWidget=e,null===(i=this._lastFocusedWidget)||void 0===i||i.getHTMLElement().classList.add("last-focused"))}register(e,t){if(!this._hasCreatedStyleController){this._hasCreatedStyleController=!0;new n.wD((0,o.dS)(),"").style(w.O2)}if(this.lists.some((t=>t.widget===e)))throw new Error("Cannot register the same widget multiple times");const i={widget:e,extraContextKeys:t};return this.lists.push(i),(0,o.H9)(e.getHTMLElement())&&this.setLastFocusedList(e),(0,u.F8)(e.onDidFocus((()=>this.setLastFocusedList(e))),(0,u.OF)((()=>this.lists.splice(this.lists.indexOf(i),1))),e.onDidDispose((()=>{this.lists=this.lists.filter((e=>e!==i)),this._lastFocusedWidget===e&&this.setLastFocusedList(void 0)})))}dispose(){this.disposables.dispose()}}const x=new f.uy("listScrollAtBoundary","none"),T=(f.Ao.or(x.isEqualTo("top"),x.isEqualTo("both")),f.Ao.or(x.isEqualTo("bottom"),x.isEqualTo("both")),new f.uy("listFocus",!0)),K=new f.uy("treestickyScrollFocused",!1),N=new f.uy("listSupportsMultiselect",!0),D=f.Ao.and(T,f.Ao.not(y.d0),K.negate()),V=new f.uy("listHasSelectionOrFocus",!1),E=new f.uy("listDoubleSelection",!1),z=new f.uy("listMultiSelection",!1),A=new f.uy("listSelectionNavigation",!1),B=new f.uy("listSupportsFind",!0),_=new f.uy("treeElementCanCollapse",!1),H=new f.uy("treeElementHasParent",!1),L=new f.uy("treeElementCanExpand",!1),P=new f.uy("treeElementHasChild",!1),W=new f.uy("treeFindOpen",!1),U="listTypeNavigationMode",G="listAutomaticKeyboardNavigation";function I(e,t){const i=e.createScoped(t.getHTMLElement());return T.bindTo(i),i}function j(e,t){const i=x.bindTo(e),o=()=>{const e=0===t.scrollTop,o=t.scrollHeight-t.renderHeight-t.scrollTop<1;e&&o?i.set("both"):e?i.set("top"):o?i.set("bottom"):i.set("none")};return o(),t.onDidScroll(o)}const Z="workbench.list.multiSelectModifier",q="workbench.list.openMode",R="workbench.list.horizontalScrolling",X="workbench.list.defaultFindMode",J="workbench.list.typeNavigationMode",Q="workbench.list.keyboardNavigation",Y="workbench.list.scrollByPage",$="workbench.list.defaultFindMatchType",ee="workbench.tree.indent",te="workbench.tree.renderIndentGuides",ie="workbench.list.smoothScrolling",oe="workbench.list.mouseWheelScrollSensitivity",se="workbench.list.fastScrollSensitivity",ne="workbench.tree.expandMode",le="workbench.tree.enableStickyScroll",re="workbench.tree.stickyScrollMaxItemCount";function ae(e){return"alt"===e.getValue(Z)}class ce extends u.JT{constructor(e){super(),this.configurationService=e,this.useAltAsMultipleSelectionModifier=ae(e),this.registerListeners()}registerListeners(){this._register(this.configurationService.onDidChangeConfiguration((e=>{e.affectsConfiguration(Z)&&(this.useAltAsMultipleSelectionModifier=ae(this.configurationService))})))}isSelectionSingleChangeEvent(e){return this.useAltAsMultipleSelectionModifier?e.browserEvent.altKey:(0,n.Zo)(e)}isSelectionRangeChangeEvent(e){return(0,n.wn)(e)}}function de(e,t){var i;const o=e.get(p.Ui),s=e.get(m.d),n=new u.SL;return[{...t,keyboardNavigationDelegate:{mightProducePrintableCharacter:e=>s.mightProducePrintableCharacter(e)},smoothScrolling:Boolean(o.getValue(ie)),mouseWheelScrollSensitivity:o.getValue(oe),fastScrollSensitivity:o.getValue(se),multipleSelectionController:null!==(i=t.multipleSelectionController)&&void 0!==i?i:n.add(new ce(o)),keyboardNavigationEventFilter:ve(s),scrollByPage:Boolean(o.getValue(Y))},n]}let he=class extends n.aV{constructor(e,t,i,o,s,n,l,r,a){const c=void 0!==s.horizontalScrolling?s.horizontalScrolling:Boolean(r.getValue(R)),[d,h]=a.invokeFunction(de,s);super(e,t,i,o,{keyboardSupport:!1,...d,horizontalScrolling:c}),this.disposables.add(h),this.contextKeyService=I(n,this),this.disposables.add(j(this.contextKeyService,this)),this.listSupportsMultiSelect=N.bindTo(this.contextKeyService),this.listSupportsMultiSelect.set(!1!==s.multipleSelectionSupport);A.bindTo(this.contextKeyService).set(Boolean(s.selectionNavigation)),this.listHasSelectionOrFocus=V.bindTo(this.contextKeyService),this.listDoubleSelection=E.bindTo(this.contextKeyService),this.listMultiSelection=z.bindTo(this.contextKeyService),this.horizontalScrolling=s.horizontalScrolling,this._useAltAsMultipleSelectionModifier=ae(r),this.disposables.add(this.contextKeyService),this.disposables.add(l.register(this)),this.updateStyles(s.overrideStyles),this.disposables.add(this.onDidChangeSelection((()=>{const e=this.getSelection(),t=this.getFocus();this.contextKeyService.bufferChangeEvents((()=>{this.listHasSelectionOrFocus.set(e.length>0||t.length>0),this.listMultiSelection.set(e.length>1),this.listDoubleSelection.set(2===e.length)}))}))),this.disposables.add(this.onDidChangeFocus((()=>{const e=this.getSelection(),t=this.getFocus();this.listHasSelectionOrFocus.set(e.length>0||t.length>0)}))),this.disposables.add(r.onDidChangeConfiguration((e=>{e.affectsConfiguration(Z)&&(this._useAltAsMultipleSelectionModifier=ae(r));let t={};if(e.affectsConfiguration(R)&&void 0===this.horizontalScrolling){const e=Boolean(r.getValue(R));t={...t,horizontalScrolling:e}}if(e.affectsConfiguration(Y)){const e=Boolean(r.getValue(Y));t={...t,scrollByPage:e}}if(e.affectsConfiguration(ie)){const e=Boolean(r.getValue(ie));t={...t,smoothScrolling:e}}if(e.affectsConfiguration(oe)){const e=r.getValue(oe);t={...t,mouseWheelScrollSensitivity:e}}if(e.affectsConfiguration(se)){const e=r.getValue(se);t={...t,fastScrollSensitivity:e}}Object.keys(t).length>0&&this.updateOptions(t)}))),this.navigator=new Se(this,{configurationService:r,...s}),this.disposables.add(this.navigator)}updateOptions(e){super.updateOptions(e),void 0!==e.overrideStyles&&this.updateStyles(e.overrideStyles),void 0!==e.multipleSelectionSupport&&this.listSupportsMultiSelect.set(!!e.multipleSelectionSupport)}updateStyles(e){this.style(e?(0,w.TU)(e):w.O2)}};he=k([M(5,f.i6),M(6,O),M(7,p.Ui),M(8,b.TG)],he);let ue=class extends s.j{constructor(e,t,i,o,s,n,l,r,a){const c=void 0!==s.horizontalScrolling?s.horizontalScrolling:Boolean(r.getValue(R)),[d,h]=a.invokeFunction(de,s);super(e,t,i,o,{keyboardSupport:!1,...d,horizontalScrolling:c}),this.disposables=new u.SL,this.disposables.add(h),this.contextKeyService=I(n,this),this.disposables.add(j(this.contextKeyService,this.widget)),this.horizontalScrolling=s.horizontalScrolling,this.listSupportsMultiSelect=N.bindTo(this.contextKeyService),this.listSupportsMultiSelect.set(!1!==s.multipleSelectionSupport);A.bindTo(this.contextKeyService).set(Boolean(s.selectionNavigation)),this._useAltAsMultipleSelectionModifier=ae(r),this.disposables.add(this.contextKeyService),this.disposables.add(l.register(this)),this.updateStyles(s.overrideStyles),this.disposables.add(r.onDidChangeConfiguration((e=>{e.affectsConfiguration(Z)&&(this._useAltAsMultipleSelectionModifier=ae(r));let t={};if(e.affectsConfiguration(R)&&void 0===this.horizontalScrolling){const e=Boolean(r.getValue(R));t={...t,horizontalScrolling:e}}if(e.affectsConfiguration(Y)){const e=Boolean(r.getValue(Y));t={...t,scrollByPage:e}}if(e.affectsConfiguration(ie)){const e=Boolean(r.getValue(ie));t={...t,smoothScrolling:e}}if(e.affectsConfiguration(oe)){const e=r.getValue(oe);t={...t,mouseWheelScrollSensitivity:e}}if(e.affectsConfiguration(se)){const e=r.getValue(se);t={...t,fastScrollSensitivity:e}}Object.keys(t).length>0&&this.updateOptions(t)}))),this.navigator=new Se(this,{configurationService:r,...s}),this.disposables.add(this.navigator)}updateOptions(e){super.updateOptions(e),void 0!==e.overrideStyles&&this.updateStyles(e.overrideStyles),void 0!==e.multipleSelectionSupport&&this.listSupportsMultiSelect.set(!!e.multipleSelectionSupport)}updateStyles(e){this.style(e?(0,w.TU)(e):w.O2)}dispose(){this.disposables.dispose(),super.dispose()}};ue=k([M(5,f.i6),M(6,O),M(7,p.Ui),M(8,b.TG)],ue);let ge=class extends l.i{constructor(e,t,i,o,s,n,l,r,a,c){const d=void 0!==n.horizontalScrolling?n.horizontalScrolling:Boolean(a.getValue(R)),[h,u]=c.invokeFunction(de,n);super(e,t,i,o,s,{keyboardSupport:!1,...h,horizontalScrolling:d}),this.disposables.add(u),this.contextKeyService=I(l,this),this.disposables.add(j(this.contextKeyService,this)),this.listSupportsMultiSelect=N.bindTo(this.contextKeyService),this.listSupportsMultiSelect.set(!1!==n.multipleSelectionSupport);A.bindTo(this.contextKeyService).set(Boolean(n.selectionNavigation)),this.listHasSelectionOrFocus=V.bindTo(this.contextKeyService),this.listDoubleSelection=E.bindTo(this.contextKeyService),this.listMultiSelection=z.bindTo(this.contextKeyService),this.horizontalScrolling=n.horizontalScrolling,this._useAltAsMultipleSelectionModifier=ae(a),this.disposables.add(this.contextKeyService),this.disposables.add(r.register(this)),this.updateStyles(n.overrideStyles),this.disposables.add(this.onDidChangeSelection((()=>{const e=this.getSelection(),t=this.getFocus();this.contextKeyService.bufferChangeEvents((()=>{this.listHasSelectionOrFocus.set(e.length>0||t.length>0),this.listMultiSelection.set(e.length>1),this.listDoubleSelection.set(2===e.length)}))}))),this.disposables.add(this.onDidChangeFocus((()=>{const e=this.getSelection(),t=this.getFocus();this.listHasSelectionOrFocus.set(e.length>0||t.length>0)}))),this.disposables.add(a.onDidChangeConfiguration((e=>{e.affectsConfiguration(Z)&&(this._useAltAsMultipleSelectionModifier=ae(a));let t={};if(e.affectsConfiguration(R)&&void 0===this.horizontalScrolling){const e=Boolean(a.getValue(R));t={...t,horizontalScrolling:e}}if(e.affectsConfiguration(Y)){const e=Boolean(a.getValue(Y));t={...t,scrollByPage:e}}if(e.affectsConfiguration(ie)){const e=Boolean(a.getValue(ie));t={...t,smoothScrolling:e}}if(e.affectsConfiguration(oe)){const e=a.getValue(oe);t={...t,mouseWheelScrollSensitivity:e}}if(e.affectsConfiguration(se)){const e=a.getValue(se);t={...t,fastScrollSensitivity:e}}Object.keys(t).length>0&&this.updateOptions(t)}))),this.navigator=new fe(this,{configurationService:a,...n}),this.disposables.add(this.navigator)}updateOptions(e){super.updateOptions(e),void 0!==e.overrideStyles&&this.updateStyles(e.overrideStyles),void 0!==e.multipleSelectionSupport&&this.listSupportsMultiSelect.set(!!e.multipleSelectionSupport)}updateStyles(e){this.style(e?(0,w.TU)(e):w.O2)}dispose(){this.disposables.dispose(),super.dispose()}};ge=k([M(6,f.i6),M(7,O),M(8,p.Ui),M(9,b.TG)],ge);class pe extends u.JT{constructor(e,t){var i;super(),this.widget=e,this._onDidOpen=this._register(new h.Q5),this.onDidOpen=this._onDidOpen.event,this._register(h.ju.filter(this.widget.onDidChangeSelection,(e=>(0,o.vd)(e.browserEvent)))((e=>this.onSelectionFromKeyboard(e)))),this._register(this.widget.onPointer((e=>this.onPointer(e.element,e.browserEvent)))),this._register(this.widget.onMouseDblClick((e=>this.onMouseDblClick(e.element,e.browserEvent)))),"boolean"!=typeof(null==t?void 0:t.openOnSingleClick)&&(null==t?void 0:t.configurationService)?(this.openOnSingleClick="doubleClick"!==(null==t?void 0:t.configurationService.getValue(q)),this._register(null==t?void 0:t.configurationService.onDidChangeConfiguration((e=>{e.affectsConfiguration(q)&&(this.openOnSingleClick="doubleClick"!==(null==t?void 0:t.configurationService.getValue(q)))})))):this.openOnSingleClick=null===(i=null==t?void 0:t.openOnSingleClick)||void 0===i||i}onSelectionFromKeyboard(e){if(1!==e.elements.length)return;const t=e.browserEvent,i="boolean"!=typeof t.preserveFocus||t.preserveFocus,o="boolean"==typeof t.pinned?t.pinned:!i;this._open(this.getSelectedElement(),i,o,!1,e.browserEvent)}onPointer(e,t){if(!this.openOnSingleClick)return;if(2===t.detail)return;const i=1===t.button,o=t.ctrlKey||t.metaKey||t.altKey;this._open(e,!0,i,o,t)}onMouseDblClick(e,t){if(!t)return;const i=t.target;if(i.classList.contains("monaco-tl-twistie")||i.classList.contains("monaco-icon-label")&&i.classList.contains("folder-icon")&&t.offsetX<16)return;const o=t.ctrlKey||t.metaKey||t.altKey;this._open(e,!1,!0,o,t)}_open(e,t,i,o,s){e&&this._onDidOpen.fire({editorOptions:{preserveFocus:t,pinned:i,revealIfVisible:!0},sideBySide:o,element:e,browserEvent:s})}}class Se extends pe{constructor(e,t){super(e,t),this.widget=e}getSelectedElement(){return this.widget.getSelectedElements()[0]}}class fe extends pe{constructor(e,t){super(e,t)}getSelectedElement(){return this.widget.getSelectedElements()[0]}}class ye extends pe{constructor(e,t){super(e,t)}getSelectedElement(){var e;return null!==(e=this.widget.getSelection()[0])&&void 0!==e?e:void 0}}function ve(e){let t=!1;return i=>{if(i.toKeyCodeChord().isModifierKey())return!1;if(t)return t=!1,!1;const o=e.softDispatch(i,i.target);return 1===o.kind?(t=!0,!1):(t=!1,0===o.kind)}}let be=class extends d.H{constructor(e,t,i,o,s,n,l,r,a){const{options:c,getTypeNavigationMode:d,disposable:h}=n.invokeFunction(Fe,s);super(e,t,i,o,c),this.disposables.add(h),this.internals=new xe(this,s,d,s.overrideStyles,l,r,a),this.disposables.add(this.internals)}updateOptions(e){super.updateOptions(e),this.internals.updateOptions(e)}};be=k([M(5,b.TG),M(6,f.i6),M(7,O),M(8,p.Ui)],be);let me=class extends d.h{constructor(e,t,i,o,s,n,l,r,a){const{options:c,getTypeNavigationMode:d,disposable:h}=n.invokeFunction(Fe,s);super(e,t,i,o,c),this.disposables.add(h),this.internals=new xe(this,s,d,s.overrideStyles,l,r,a),this.disposables.add(this.internals)}updateOptions(e={}){super.updateOptions(e),e.overrideStyles&&this.internals.updateStyleOverrides(e.overrideStyles),this.internals.updateOptions(e)}};me=k([M(5,b.TG),M(6,f.i6),M(7,O),M(8,p.Ui)],me);let Ce=class extends c.u{constructor(e,t,i,o,s,n,l,r,a,c){const{options:d,getTypeNavigationMode:h,disposable:u}=l.invokeFunction(Fe,n);super(e,t,i,o,s,d),this.disposables.add(u),this.internals=new xe(this,n,h,n.overrideStyles,r,a,c),this.disposables.add(this.internals)}updateOptions(e={}){super.updateOptions(e),void 0!==e.overrideStyles&&this.internals.updateStyleOverrides(e.overrideStyles),this.internals.updateOptions(e)}};Ce=k([M(6,b.TG),M(7,f.i6),M(8,O),M(9,p.Ui)],Ce);let we=class extends a.c{get onDidOpen(){return this.internals.onDidOpen}constructor(e,t,i,o,s,n,l,r,a,c){const{options:d,getTypeNavigationMode:h,disposable:u}=l.invokeFunction(Fe,n);super(e,t,i,o,s,d),this.disposables.add(u),this.internals=new xe(this,n,h,n.overrideStyles,r,a,c),this.disposables.add(this.internals)}updateOptions(e={}){super.updateOptions(e),e.overrideStyles&&this.internals.updateStyleOverrides(e.overrideStyles),this.internals.updateOptions(e)}};we=k([M(6,b.TG),M(7,f.i6),M(8,O),M(9,p.Ui)],we);let ke=class extends a.h{constructor(e,t,i,o,s,n,l,r,a,c,d){const{options:h,getTypeNavigationMode:u,disposable:g}=r.invokeFunction(Fe,l);super(e,t,i,o,s,n,h),this.disposables.add(g),this.internals=new xe(this,l,u,l.overrideStyles,a,c,d),this.disposables.add(this.internals)}updateOptions(e){super.updateOptions(e),this.internals.updateOptions(e)}};function Me(e){const t=e.getValue(X);if("highlight"===t)return r.sZ.Highlight;if("filter"===t)return r.sZ.Filter;const i=e.getValue(Q);return"simple"===i||"highlight"===i?r.sZ.Highlight:"filter"===i?r.sZ.Filter:void 0}function Oe(e){const t=e.getValue($);return"fuzzy"===t?r.Zd.Fuzzy:"contiguous"===t?r.Zd.Contiguous:void 0}function Fe(e,t){var i;const o=e.get(p.Ui),s=e.get(v.u),l=e.get(f.i6),r=e.get(b.TG),a=void 0!==t.horizontalScrolling?t.horizontalScrolling:Boolean(o.getValue(R)),[c,d]=r.invokeFunction(de,t),h=t.paddingBottom,u=void 0!==t.renderIndentGuides?t.renderIndentGuides:o.getValue(te);return{getTypeNavigationMode:()=>{const e=l.getContextKeyValue(U);if("automatic"===e)return n.AA.Automatic;if("trigger"===e)return n.AA.Trigger;if(!1===l.getContextKeyValue(G))return n.AA.Trigger;const t=o.getValue(J);return"automatic"===t?n.AA.Automatic:"trigger"===t?n.AA.Trigger:void 0},disposable:d,options:{keyboardSupport:!1,...c,indent:"number"==typeof o.getValue(ee)?o.getValue(ee):void 0,renderIndentGuides:u,smoothScrolling:Boolean(o.getValue(ie)),defaultFindMode:Me(o),defaultFindMatchType:Oe(o),horizontalScrolling:a,scrollByPage:Boolean(o.getValue(Y)),paddingBottom:h,hideTwistiesOfChildlessElements:t.hideTwistiesOfChildlessElements,expandOnlyOnTwistieClick:null!==(i=t.expandOnlyOnTwistieClick)&&void 0!==i?i:"doubleClick"===o.getValue(ne),contextViewProvider:s,findWidgetStyles:w.uX,enableStickyScroll:Boolean(o.getValue(le)),stickyScrollMaxItemCount:Number(o.getValue(re))}}}ke=k([M(7,b.TG),M(8,f.i6),M(9,O),M(10,p.Ui)],ke);let xe=class{get onDidOpen(){return this.navigator.onDidOpen}constructor(e,t,i,o,s,n,l){var r;this.tree=e,this.disposables=[],this.contextKeyService=I(s,e),this.disposables.push(j(this.contextKeyService,e)),this.listSupportsMultiSelect=N.bindTo(this.contextKeyService),this.listSupportsMultiSelect.set(!1!==t.multipleSelectionSupport);A.bindTo(this.contextKeyService).set(Boolean(t.selectionNavigation)),this.listSupportFindWidget=B.bindTo(this.contextKeyService),this.listSupportFindWidget.set(null===(r=t.findWidgetEnabled)||void 0===r||r),this.hasSelectionOrFocus=V.bindTo(this.contextKeyService),this.hasDoubleSelection=E.bindTo(this.contextKeyService),this.hasMultiSelection=z.bindTo(this.contextKeyService),this.treeElementCanCollapse=_.bindTo(this.contextKeyService),this.treeElementHasParent=H.bindTo(this.contextKeyService),this.treeElementCanExpand=L.bindTo(this.contextKeyService),this.treeElementHasChild=P.bindTo(this.contextKeyService),this.treeFindOpen=W.bindTo(this.contextKeyService),this.treeStickyScrollFocused=K.bindTo(this.contextKeyService),this._useAltAsMultipleSelectionModifier=ae(l),this.updateStyleOverrides(o);const a=()=>{const t=e.getFocus()[0];if(!t)return;const i=e.getNode(t);this.treeElementCanCollapse.set(i.collapsible&&!i.collapsed),this.treeElementHasParent.set(!!e.getParentElement(t)),this.treeElementCanExpand.set(i.collapsible&&i.collapsed),this.treeElementHasChild.set(!!e.getFirstElementChild(t))},c=new Set;c.add(U),c.add(G),this.disposables.push(this.contextKeyService,n.register(e),e.onDidChangeSelection((()=>{const t=e.getSelection(),i=e.getFocus();this.contextKeyService.bufferChangeEvents((()=>{this.hasSelectionOrFocus.set(t.length>0||i.length>0),this.hasMultiSelection.set(t.length>1),this.hasDoubleSelection.set(2===t.length)}))})),e.onDidChangeFocus((()=>{const t=e.getSelection(),i=e.getFocus();this.hasSelectionOrFocus.set(t.length>0||i.length>0),a()})),e.onDidChangeCollapseState(a),e.onDidChangeModel(a),e.onDidChangeFindOpenState((e=>this.treeFindOpen.set(e))),e.onDidChangeStickyScrollFocused((e=>this.treeStickyScrollFocused.set(e))),l.onDidChangeConfiguration((o=>{let s={};if(o.affectsConfiguration(Z)&&(this._useAltAsMultipleSelectionModifier=ae(l)),o.affectsConfiguration(ee)){const e=l.getValue(ee);s={...s,indent:e}}if(o.affectsConfiguration(te)&&void 0===t.renderIndentGuides){const e=l.getValue(te);s={...s,renderIndentGuides:e}}if(o.affectsConfiguration(ie)){const e=Boolean(l.getValue(ie));s={...s,smoothScrolling:e}}if(o.affectsConfiguration(X)||o.affectsConfiguration(Q)){const e=Me(l);s={...s,defaultFindMode:e}}if(o.affectsConfiguration(J)||o.affectsConfiguration(Q)){const e=i();s={...s,typeNavigationMode:e}}if(o.affectsConfiguration($)){const e=Oe(l);s={...s,defaultFindMatchType:e}}if(o.affectsConfiguration(R)&&void 0===t.horizontalScrolling){const e=Boolean(l.getValue(R));s={...s,horizontalScrolling:e}}if(o.affectsConfiguration(Y)){const e=Boolean(l.getValue(Y));s={...s,scrollByPage:e}}if(o.affectsConfiguration(ne)&&void 0===t.expandOnlyOnTwistieClick&&(s={...s,expandOnlyOnTwistieClick:"doubleClick"===l.getValue(ne)}),o.affectsConfiguration(le)){const e=l.getValue(le);s={...s,enableStickyScroll:e}}if(o.affectsConfiguration(re)){const e=Math.max(1,l.getValue(re));s={...s,stickyScrollMaxItemCount:e}}if(o.affectsConfiguration(oe)){const e=l.getValue(oe);s={...s,mouseWheelScrollSensitivity:e}}if(o.affectsConfiguration(se)){const e=l.getValue(se);s={...s,fastScrollSensitivity:e}}Object.keys(s).length>0&&e.updateOptions(s)})),this.contextKeyService.onDidChangeContext((t=>{t.affectsSome(c)&&e.updateOptions({typeNavigationMode:i()})}))),this.navigator=new ye(e,{configurationService:l,...t}),this.disposables.push(this.navigator)}updateOptions(e){void 0!==e.multipleSelectionSupport&&this.listSupportsMultiSelect.set(!!e.multipleSelectionSupport)}updateStyleOverrides(e){this.tree.style(e?(0,w.TU)(e):w.O2)}dispose(){this.disposables=(0,u.B9)(this.disposables)}};xe=k([M(4,f.i6),M(5,O),M(6,p.Ui)],xe);C.B.as(S.IP.Configuration).registerConfiguration({id:"workbench",order:7,title:(0,g.NC)("workbenchConfigurationTitle","Workbench"),type:"object",properties:{[Z]:{type:"string",enum:["ctrlCmd","alt"],markdownEnumDescriptions:[(0,g.NC)("multiSelectModifier.ctrlCmd","Maps to `Control` on Windows and Linux and to `Command` on macOS."),(0,g.NC)("multiSelectModifier.alt","Maps to `Alt` on Windows and Linux and to `Option` on macOS.")],default:"ctrlCmd",description:(0,g.NC)({key:"multiSelectModifier",comment:["- `ctrlCmd` refers to a value the setting can take and should not be localized.","- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized."]},"The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.")},[q]:{type:"string",enum:["singleClick","doubleClick"],default:"singleClick",description:(0,g.NC)({key:"openModeModifier",comment:["`singleClick` and `doubleClick` refers to a value the setting can take and should not be localized."]},"Controls how to open items in trees and lists using the mouse (if supported). Note that some trees and lists might choose to ignore this setting if it is not applicable.")},[R]:{type:"boolean",default:!1,description:(0,g.NC)("horizontalScrolling setting","Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.")},[Y]:{type:"boolean",default:!1,description:(0,g.NC)("list.scrollByPage","Controls whether clicks in the scrollbar scroll page by page.")},[ee]:{type:"number",default:8,minimum:4,maximum:40,description:(0,g.NC)("tree indent setting","Controls tree indentation in pixels.")},[te]:{type:"string",enum:["none","onHover","always"],default:"onHover",description:(0,g.NC)("render tree indent guides","Controls whether the tree should render indent guides.")},[ie]:{type:"boolean",default:!1,description:(0,g.NC)("list smoothScrolling setting","Controls whether lists and trees have smooth scrolling.")},[oe]:{type:"number",default:1,markdownDescription:(0,g.NC)("Mouse Wheel Scroll Sensitivity","A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.")},[se]:{type:"number",default:5,markdownDescription:(0,g.NC)("Fast Scroll Sensitivity","Scrolling speed multiplier when pressing `Alt`.")},[X]:{type:"string",enum:["highlight","filter"],enumDescriptions:[(0,g.NC)("defaultFindModeSettingKey.highlight","Highlight elements when searching. Further up and down navigation will traverse only the highlighted elements."),(0,g.NC)("defaultFindModeSettingKey.filter","Filter elements when searching.")],default:"highlight",description:(0,g.NC)("defaultFindModeSettingKey","Controls the default find mode for lists and trees in the workbench.")},[Q]:{type:"string",enum:["simple","highlight","filter"],enumDescriptions:[(0,g.NC)("keyboardNavigationSettingKey.simple","Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes."),(0,g.NC)("keyboardNavigationSettingKey.highlight","Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements."),(0,g.NC)("keyboardNavigationSettingKey.filter","Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.")],default:"highlight",description:(0,g.NC)("keyboardNavigationSettingKey","Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter."),deprecated:!0,deprecationMessage:(0,g.NC)("keyboardNavigationSettingKeyDeprecated","Please use 'workbench.list.defaultFindMode' and\t'workbench.list.typeNavigationMode' instead.")},[$]:{type:"string",enum:["fuzzy","contiguous"],enumDescriptions:[(0,g.NC)("defaultFindMatchTypeSettingKey.fuzzy","Use fuzzy matching when searching."),(0,g.NC)("defaultFindMatchTypeSettingKey.contiguous","Use contiguous matching when searching.")],default:"fuzzy",description:(0,g.NC)("defaultFindMatchTypeSettingKey","Controls the type of matching used when searching lists and trees in the workbench.")},[ne]:{type:"string",enum:["singleClick","doubleClick"],default:"singleClick",description:(0,g.NC)("expand mode","Controls how tree folders are expanded when clicking the folder names. Note that some trees and lists might choose to ignore this setting if it is not applicable.")},[le]:{type:"boolean",default:!0,description:(0,g.NC)("sticky scroll","Controls whether sticky scrolling is enabled in trees.")},[re]:{type:"number",minimum:1,default:7,markdownDescription:(0,g.NC)("sticky scroll maximum items","Controls the number of sticky elements displayed in the tree when `#workbench.tree.enableStickyScroll#` is enabled.")},[J]:{type:"string",enum:["automatic","trigger"],default:"automatic",markdownDescription:(0,g.NC)("typeNavigationMode2","Controls how type navigation works in lists and trees in the workbench. When set to `trigger`, type navigation begins once the `list.triggerTypeNavigation` command is run.")}}})}}]);