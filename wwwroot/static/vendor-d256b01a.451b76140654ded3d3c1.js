"use strict";(self.webpackChunkui_react=self.webpackChunkui_react||[]).push([[3540],{25552:(e,t,n)=>{n.d(t,{H:()=>f});var s,o,i=n(16052),r=Object.defineProperty,a=Object.getOwnPropertyDescriptor,c=Object.getOwnPropertyNames,l=Object.prototype.hasOwnProperty,d=(e,t,n,s)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let o of c(t))l.call(e,o)||o===n||r(e,o,{get:()=>t[o],enumerable:!(s=a(t,o))||s.enumerable});return e},p={};d(p,s=i,"default"),o&&d(o,s,"default");var m={},u={},g=class e{static getOrCreate(t){return u[t]||(u[t]=new e(t)),u[t]}constructor(e){this._languageId=e,this._loadingTriggered=!1,this._lazyLoadPromise=new Promise(((e,t)=>{this._lazyLoadPromiseResolve=e,this._lazyLoadPromiseReject=t}))}load(){return this._loadingTriggered||(this._loadingTriggered=!0,m[this._languageId].loader().then((e=>this._lazyLoadPromiseResolve(e)),(e=>this._lazyLoadPromiseReject(e)))),this._lazyLoadPromise}};function f(e){const t=e.id;m[t]=e,p.languages.register(e);const n=g.getOrCreate(t);p.languages.registerTokensProviderFactory(t,{create:async()=>(await n.load()).language}),p.languages.onLanguageEncountered(t,(async()=>{const e=await n.load();p.languages.setLanguageConfiguration(t,e.conf)}))}},29126:(e,t,n)=>{(0,n(25552).H)({id:"abap",extensions:[".abap"],aliases:["abap","ABAP"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,40848))})},40848:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>s,language:()=>o});var s={comments:{lineComment:"*"},brackets:[["[","]"],["(",")"]]},o={defaultToken:"invalid",ignoreCase:!0,tokenPostfix:".abap",keywords:["abap-source","abbreviated","abstract","accept","accepting","according","activation","actual","add","add-corresponding","adjacent","after","alias","aliases","align","all","allocate","alpha","analysis","analyzer","and","append","appendage","appending","application","archive","area","arithmetic","as","ascending","aspect","assert","assign","assigned","assigning","association","asynchronous","at","attributes","authority","authority-check","avg","back","background","backup","backward","badi","base","before","begin","between","big","binary","bintohex","bit","black","blank","blanks","blob","block","blocks","blue","bound","boundaries","bounds","boxed","break-point","buffer","by","bypassing","byte","byte-order","call","calling","case","cast","casting","catch","center","centered","chain","chain-input","chain-request","change","changing","channels","character","char-to-hex","check","checkbox","ci_","circular","class","class-coding","class-data","class-events","class-methods","class-pool","cleanup","clear","client","clob","clock","close","coalesce","code","coding","col_background","col_group","col_heading","col_key","col_negative","col_normal","col_positive","col_total","collect","color","column","columns","comment","comments","commit","common","communication","comparing","component","components","compression","compute","concat","concat_with_space","concatenate","cond","condense","condition","connect","connection","constants","context","contexts","continue","control","controls","conv","conversion","convert","copies","copy","corresponding","country","cover","cpi","create","creating","critical","currency","currency_conversion","current","cursor","cursor-selection","customer","customer-function","dangerous","data","database","datainfo","dataset","date","dats_add_days","dats_add_months","dats_days_between","dats_is_valid","daylight","dd/mm/yy","dd/mm/yyyy","ddmmyy","deallocate","decimal_shift","decimals","declarations","deep","default","deferred","define","defining","definition","delete","deleting","demand","department","descending","describe","destination","detail","dialog","directory","disconnect","display","display-mode","distinct","divide","divide-corresponding","division","do","dummy","duplicate","duplicates","duration","during","dynamic","dynpro","edit","editor-call","else","elseif","empty","enabled","enabling","encoding","end","endat","endcase","endcatch","endchain","endclass","enddo","endenhancement","end-enhancement-section","endexec","endform","endfunction","endian","endif","ending","endinterface","end-lines","endloop","endmethod","endmodule","end-of-definition","end-of-editing","end-of-file","end-of-page","end-of-selection","endon","endprovide","endselect","end-test-injection","end-test-seam","endtry","endwhile","endwith","engineering","enhancement","enhancement-point","enhancements","enhancement-section","entries","entry","enum","environment","equiv","errormessage","errors","escaping","event","events","exact","except","exception","exceptions","exception-table","exclude","excluding","exec","execute","exists","exit","exit-command","expand","expanding","expiration","explicit","exponent","export","exporting","extend","extended","extension","extract","fail","fetch","field","field-groups","fields","field-symbol","field-symbols","file","filter","filters","filter-table","final","find","first","first-line","fixed-point","fkeq","fkge","flush","font","for","form","format","forward","found","frame","frames","free","friends","from","function","functionality","function-pool","further","gaps","generate","get","giving","gkeq","gkge","global","grant","green","group","groups","handle","handler","harmless","hashed","having","hdb","header","headers","heading","head-lines","help-id","help-request","hextobin","hide","high","hint","hold","hotspot","icon","id","identification","identifier","ids","if","ignore","ignoring","immediately","implementation","implementations","implemented","implicit","import","importing","in","inactive","incl","include","includes","including","increment","index","index-line","infotypes","inheriting","init","initial","initialization","inner","inout","input","insert","instance","instances","instr","intensified","interface","interface-pool","interfaces","internal","intervals","into","inverse","inverted-date","is","iso","job","join","keep","keeping","kernel","key","keys","keywords","kind","language","last","late","layout","leading","leave","left","left-justified","leftplus","leftspace","legacy","length","let","level","levels","like","line","lines","line-count","linefeed","line-selection","line-size","list","listbox","list-processing","little","llang","load","load-of-program","lob","local","locale","locator","logfile","logical","log-point","long","loop","low","lower","lpad","lpi","ltrim","mail","main","major-id","mapping","margin","mark","mask","match","matchcode","max","maximum","medium","members","memory","mesh","message","message-id","messages","messaging","method","methods","min","minimum","minor-id","mm/dd/yy","mm/dd/yyyy","mmddyy","mode","modif","modifier","modify","module","move","move-corresponding","multiply","multiply-corresponding","name","nametab","native","nested","nesting","new","new-line","new-page","new-section","next","no","no-display","no-extension","no-gap","no-gaps","no-grouping","no-heading","no-scrolling","no-sign","no-title","no-topofpage","no-zero","node","nodes","non-unicode","non-unique","not","null","number","object","objects","obligatory","occurrence","occurrences","occurs","of","off","offset","ole","on","only","open","option","optional","options","or","order","other","others","out","outer","output","output-length","overflow","overlay","pack","package","pad","padding","page","pages","parameter","parameters","parameter-table","part","partially","pattern","percentage","perform","performing","person","pf1","pf10","pf11","pf12","pf13","pf14","pf15","pf2","pf3","pf4","pf5","pf6","pf7","pf8","pf9","pf-status","pink","places","pool","pos_high","pos_low","position","pragmas","precompiled","preferred","preserving","primary","print","print-control","priority","private","procedure","process","program","property","protected","provide","public","push","pushbutton","put","queue-only","quickinfo","radiobutton","raise","raising","range","ranges","read","reader","read-only","receive","received","receiver","receiving","red","redefinition","reduce","reduced","ref","reference","refresh","regex","reject","remote","renaming","replace","replacement","replacing","report","request","requested","reserve","reset","resolution","respecting","responsible","result","results","resumable","resume","retry","return","returncode","returning","returns","right","right-justified","rightplus","rightspace","risk","rmc_communication_failure","rmc_invalid_status","rmc_system_failure","role","rollback","rows","rpad","rtrim","run","sap","sap-spool","saving","scale_preserving","scale_preserving_scientific","scan","scientific","scientific_with_leading_zero","scroll","scroll-boundary","scrolling","search","secondary","seconds","section","select","selection","selections","selection-screen","selection-set","selection-sets","selection-table","select-options","send","separate","separated","set","shared","shift","short","shortdump-id","sign_as_postfix","single","size","skip","skipping","smart","some","sort","sortable","sorted","source","specified","split","spool","spots","sql","sqlscript","stable","stamp","standard","starting","start-of-editing","start-of-selection","state","statement","statements","static","statics","statusinfo","step-loop","stop","structure","structures","style","subkey","submatches","submit","subroutine","subscreen","subtract","subtract-corresponding","suffix","sum","summary","summing","supplied","supply","suppress","switch","switchstates","symbol","syncpoints","syntax","syntax-check","syntax-trace","system-call","system-exceptions","system-exit","tab","tabbed","table","tables","tableview","tabstrip","target","task","tasks","test","testing","test-injection","test-seam","text","textpool","then","throw","time","times","timestamp","timezone","tims_is_valid","title","titlebar","title-lines","to","tokenization","tokens","top-lines","top-of-page","trace-file","trace-table","trailing","transaction","transfer","transformation","translate","transporting","trmac","truncate","truncation","try","tstmp_add_seconds","tstmp_current_utctimestamp","tstmp_is_valid","tstmp_seconds_between","type","type-pool","type-pools","types","uline","unassign","under","unicode","union","unique","unit_conversion","unix","unpack","until","unwind","up","update","upper","user","user-command","using","utf-8","valid","value","value-request","values","vary","varying","verification-message","version","via","view","visible","wait","warning","when","whenever","where","while","width","window","windows","with","with-heading","without","with-title","word","work","write","writer","xml","xsd","yellow","yes","yymmdd","zero","zone","abap_system_timezone","abap_user_timezone","access","action","adabas","adjust_numbers","allow_precision_loss","allowed","amdp","applicationuser","as_geo_json","as400","associations","balance","behavior","breakup","bulk","cds","cds_client","check_before_save","child","clients","corr","corr_spearman","cross","cycles","datn_add_days","datn_add_months","datn_days_between","dats_from_datn","dats_tims_to_tstmp","dats_to_datn","db2","db6","ddl","dense_rank","depth","deterministic","discarding","entities","entity","error","failed","finalize","first_value","fltp_to_dec","following","fractional","full","graph","grouping","hierarchy","hierarchy_ancestors","hierarchy_ancestors_aggregate","hierarchy_descendants","hierarchy_descendants_aggregate","hierarchy_siblings","incremental","indicators","lag","last_value","lead","leaves","like_regexpr","link","locale_sap","lock","locks","many","mapped","matched","measures","median","mssqlnt","multiple","nodetype","ntile","nulls","occurrences_regexpr","one","operations","oracle","orphans","over","parent","parents","partition","pcre","period","pfcg_mapping","preceding","privileged","product","projection","rank","redirected","replace_regexpr","reported","response","responses","root","row","row_number","sap_system_date","save","schema","session","sets","shortdump","siblings","spantree","start","stddev","string_agg","subtotal","sybase","tims_from_timn","tims_to_timn","to_blob","to_clob","total","trace-entry","tstmp_to_dats","tstmp_to_dst","tstmp_to_tims","tstmpl_from_utcl","tstmpl_to_utcl","unbounded","utcl_add_seconds","utcl_current","utcl_seconds_between","uuid","var","verbatim"],builtinFunctions:["abs","acos","asin","atan","bit-set","boolc","boolx","ceil","char_off","charlen","cmax","cmin","concat_lines_of","contains","contains_any_not_of","contains_any_of","cos","cosh","count","count_any_not_of","count_any_of","dbmaxlen","distance","escape","exp","find_any_not_of","find_any_of","find_end","floor","frac","from_mixed","ipow","line_exists","line_index","log","log10","matches","nmax","nmin","numofchar","repeat","rescale","reverse","round","segment","shift_left","shift_right","sign","sin","sinh","sqrt","strlen","substring","substring_after","substring_before","substring_from","substring_to","tan","tanh","to_lower","to_mixed","to_upper","trunc","utclong_add","utclong_current","utclong_diff","xsdbool","xstrlen"],typeKeywords:["b","c","d","decfloat16","decfloat34","f","i","int8","n","p","s","string","t","utclong","x","xstring","any","clike","csequence","decfloat","numeric","simple","xsequence","accp","char","clnt","cuky","curr","datn","dats","d16d","d16n","d16r","d34d","d34n","d34r","dec","df16_dec","df16_raw","df34_dec","df34_raw","fltp","geom_ewkb","int1","int2","int4","lang","lchr","lraw","numc","quan","raw","rawstring","sstring","timn","tims","unit","utcl","df16_scl","df34_scl","prec","varc","abap_bool","abap_false","abap_true","abap_undefined","me","screen","space","super","sy","syst","table_line","*sys*"],builtinMethods:["class_constructor","constructor"],derivedTypes:["%CID","%CID_REF","%CONTROL","%DATA","%ELEMENT","%FAIL","%KEY","%MSG","%PARAM","%PID","%PID_ASSOC","%PID_PARENT","%_HINTS"],cdsLanguage:["@AbapAnnotation","@AbapCatalog","@AccessControl","@API","@ClientDependent","@ClientHandling","@CompatibilityContract","@DataAging","@EndUserText","@Environment","@LanguageDependency","@MappingRole","@Metadata","@MetadataExtension","@ObjectModel","@Scope","@Semantics","$EXTENSION","$SELF"],selectors:["->","->*","=>","~","~*"],operators:[" +"," -","/","*","**","div","mod","=","#","@","+=","-=","*=","/=","**=","&&=","?=","&","&&","bit-and","bit-not","bit-or","bit-xor","m","o","z","<"," >","<=",">=","<>","><","=<","=>","bt","byte-ca","byte-cn","byte-co","byte-cs","byte-na","byte-ns","ca","cn","co","cp","cs","eq","ge","gt","le","lt","na","nb","ne","np","ns","*/","*:","--","/*","//"],symbols:/[=><!~?&+\-*\/\^%#@]+/,tokenizer:{root:[[/[a-z_\/$%@]([\w\/$%]|-(?!>))*/,{cases:{"@typeKeywords":"type","@keywords":"keyword","@cdsLanguage":"annotation","@derivedTypes":"type","@builtinFunctions":"type","@builtinMethods":"type","@operators":"key","@default":"identifier"}}],[/<[\w]+>/,"identifier"],[/##[\w|_]+/,"comment"],{include:"@whitespace"},[/[:,.]/,"delimiter"],[/[{}()\[\]]/,"@brackets"],[/@symbols/,{cases:{"@selectors":"tag","@operators":"key","@default":""}}],[/'/,{token:"string",bracket:"@open",next:"@stringquote"}],[/`/,{token:"string",bracket:"@open",next:"@stringping"}],[/\|/,{token:"string",bracket:"@open",next:"@stringtemplate"}],[/\d+/,"number"]],stringtemplate:[[/[^\\\|]+/,"string"],[/\\\|/,"string"],[/\|/,{token:"string",bracket:"@close",next:"@pop"}]],stringping:[[/[^\\`]+/,"string"],[/`/,{token:"string",bracket:"@close",next:"@pop"}]],stringquote:[[/[^\\']+/,"string"],[/'/,{token:"string",bracket:"@close",next:"@pop"}]],whitespace:[[/[ \t\r\n]+/,""],[/^\*.*$/,"comment"],[/\".*$/,"comment"]]}}},89808:(e,t,n)=>{(0,n(25552).H)({id:"apex",extensions:[".cls"],aliases:["Apex","apex"],mimetypes:["text/x-apex-source","text/x-apex"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,54386))})},54386:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>s,language:()=>i});var s={wordPattern:/(-?\d*\.\d\w*)|([^\`\~\!\#\%\^\&\*\(\)\-\=\+\[\{\]\}\\\|\;\:\'\"\,\.\<\>\/\?\s]+)/g,comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"<",close:">"}],folding:{markers:{start:new RegExp("^\\s*//\\s*(?:(?:#?region\\b)|(?:<editor-fold\\b))"),end:new RegExp("^\\s*//\\s*(?:(?:#?endregion\\b)|(?:</editor-fold>))")}}},o=[];["abstract","activate","and","any","array","as","asc","assert","autonomous","begin","bigdecimal","blob","boolean","break","bulk","by","case","cast","catch","char","class","collect","commit","const","continue","convertcurrency","decimal","default","delete","desc","do","double","else","end","enum","exception","exit","export","extends","false","final","finally","float","for","from","future","get","global","goto","group","having","hint","if","implements","import","in","inner","insert","instanceof","int","interface","into","join","last_90_days","last_month","last_n_days","last_week","like","limit","list","long","loop","map","merge","native","new","next_90_days","next_month","next_n_days","next_week","not","null","nulls","number","object","of","on","or","outer","override","package","parallel","pragma","private","protected","public","retrieve","return","returning","rollback","savepoint","search","select","set","short","sort","stat","static","strictfp","super","switch","synchronized","system","testmethod","then","this","this_month","this_week","throw","throws","today","tolabel","tomorrow","transaction","transient","trigger","true","try","type","undelete","update","upsert","using","virtual","void","volatile","webservice","when","where","while","yesterday"].forEach((e=>{o.push(e),o.push(e.toUpperCase()),o.push((e=>e.charAt(0).toUpperCase()+e.substr(1))(e))}));var i={defaultToken:"",tokenPostfix:".apex",keywords:o,operators:["=",">","<","!","~","?",":","==","<=",">=","!=","&&","||","++","--","+","-","*","/","&","|","^","%","<<",">>",">>>","+=","-=","*=","/=","&=","|=","^=","%=","<<=",">>=",">>>="],symbols:/[=><!~?:&|+\-*\/\^%]+/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,digits:/\d+(_+\d+)*/,octaldigits:/[0-7]+(_+[0-7]+)*/,binarydigits:/[0-1]+(_+[0-1]+)*/,hexdigits:/[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,tokenizer:{root:[[/[a-z_$][\w$]*/,{cases:{"@keywords":{token:"keyword.$0"},"@default":"identifier"}}],[/[A-Z][\w\$]*/,{cases:{"@keywords":{token:"keyword.$0"},"@default":"type.identifier"}}],{include:"@whitespace"},[/[{}()\[\]]/,"@brackets"],[/[<>](?!@symbols)/,"@brackets"],[/@symbols/,{cases:{"@operators":"delimiter","@default":""}}],[/@\s*[a-zA-Z_\$][\w\$]*/,"annotation"],[/(@digits)[eE]([\-+]?(@digits))?[fFdD]?/,"number.float"],[/(@digits)\.(@digits)([eE][\-+]?(@digits))?[fFdD]?/,"number.float"],[/(@digits)[fFdD]/,"number.float"],[/(@digits)[lL]?/,"number"],[/[;,.]/,"delimiter"],[/"([^"\\]|\\.)*$/,"string.invalid"],[/'([^'\\]|\\.)*$/,"string.invalid"],[/"/,"string",'@string."'],[/'/,"string","@string.'"],[/'[^\\']'/,"string"],[/(')(@escapes)(')/,["string","string.escape","string"]],[/'/,"string.invalid"]],whitespace:[[/[ \t\r\n]+/,""],[/\/\*\*(?!\/)/,"comment.doc","@apexdoc"],[/\/\*/,"comment","@comment"],[/\/\/.*$/,"comment"]],comment:[[/[^\/*]+/,"comment"],[/\*\//,"comment","@pop"],[/[\/*]/,"comment"]],apexdoc:[[/[^\/*]+/,"comment.doc"],[/\*\//,"comment.doc","@pop"],[/[\/*]/,"comment.doc"]],string:[[/[^\\"']+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/["']/,{cases:{"$#==$S2":{token:"string",next:"@pop"},"@default":"string"}}]]}}},13598:(e,t,n)=>{(0,n(25552).H)({id:"azcli",extensions:[".azcli"],aliases:["Azure CLI","azcli"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,31471))})},31471:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>s,language:()=>o});var s={comments:{lineComment:"#"}},o={defaultToken:"keyword",ignoreCase:!0,tokenPostfix:".azcli",str:/[^#\s]/,tokenizer:{root:[{include:"@comment"},[/\s-+@str*\s*/,{cases:{"@eos":{token:"key.identifier",next:"@popall"},"@default":{token:"key.identifier",next:"@type"}}}],[/^-+@str*\s*/,{cases:{"@eos":{token:"key.identifier",next:"@popall"},"@default":{token:"key.identifier",next:"@type"}}}]],type:[{include:"@comment"},[/-+@str*\s*/,{cases:{"@eos":{token:"key.identifier",next:"@popall"},"@default":"key.identifier"}}],[/@str+\s*/,{cases:{"@eos":{token:"string",next:"@popall"},"@default":"string"}}]],comment:[[/#.*$/,{cases:{"@eos":{token:"comment",next:"@popall"}}}]]}}},52042:(e,t,n)=>{(0,n(25552).H)({id:"bat",extensions:[".bat",".cmd"],aliases:["Batch","bat"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,84129))})},84129:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>s,language:()=>o});var s={comments:{lineComment:"REM"},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'}],surroundingPairs:[{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'}],folding:{markers:{start:new RegExp("^\\s*(::\\s*|REM\\s+)#region"),end:new RegExp("^\\s*(::\\s*|REM\\s+)#endregion")}}},o={defaultToken:"",ignoreCase:!0,tokenPostfix:".bat",brackets:[{token:"delimiter.bracket",open:"{",close:"}"},{token:"delimiter.parenthesis",open:"(",close:")"},{token:"delimiter.square",open:"[",close:"]"}],keywords:/call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/,symbols:/[=><!~?&|+\-*\/\^;\.,]+/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,tokenizer:{root:[[/^(\s*)(rem(?:\s.*|))$/,["","comment"]],[/(\@?)(@keywords)(?!\w)/,[{token:"keyword"},{token:"keyword.$2"}]],[/[ \t\r\n]+/,""],[/setlocal(?!\w)/,"keyword.tag-setlocal"],[/endlocal(?!\w)/,"keyword.tag-setlocal"],[/[a-zA-Z_]\w*/,""],[/:\w*/,"metatag"],[/%[^%]+%/,"variable"],[/%%[\w]+(?!\w)/,"variable"],[/[{}()\[\]]/,"@brackets"],[/@symbols/,"delimiter"],[/\d*\.\d+([eE][\-+]?\d+)?/,"number.float"],[/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/,"number.hex"],[/\d+/,"number"],[/[;,.]/,"delimiter"],[/"/,"string",'@string."'],[/'/,"string","@string.'"]],string:[[/[^\\"'%]+/,{cases:{"@eos":{token:"string",next:"@popall"},"@default":"string"}}],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/%[\w ]+%/,"variable"],[/%%[\w]+(?!\w)/,"variable"],[/["']/,{cases:{"$#==$S2":{token:"string",next:"@pop"},"@default":"string"}}],[/$/,"string","@popall"]]}}},50497:(e,t,n)=>{(0,n(25552).H)({id:"bicep",extensions:[".bicep"],aliases:["Bicep"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,47131))})},47131:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>o,language:()=>i});var s=`\\b${"[_a-zA-Z][_a-zA-Z0-9]*"}\\b`,o={comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:"'",close:"'"},{open:"'''",close:"'''"}],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:"'",close:"'",notIn:["string","comment"]},{open:"'''",close:"'''",notIn:["string","comment"]}],autoCloseBefore:":.,=}])' \n\t",indentationRules:{increaseIndentPattern:new RegExp("^((?!\\/\\/).)*(\\{[^}\"'`]*|\\([^)\"'`]*|\\[[^\\]\"'`]*)$"),decreaseIndentPattern:new RegExp("^((?!.*?\\/\\*).*\\*/)?\\s*[\\}\\]].*$")}},i={defaultToken:"",tokenPostfix:".bicep",brackets:[{open:"{",close:"}",token:"delimiter.curly"},{open:"[",close:"]",token:"delimiter.square"},{open:"(",close:")",token:"delimiter.parenthesis"}],symbols:/[=><!~?:&|+\-*/^%]+/,keywords:["targetScope","resource","module","param","var","output","for","in","if","existing"],namedLiterals:["true","false","null"],escapes:"\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\|'|\\${)",tokenizer:{root:[{include:"@expression"},{include:"@whitespace"}],stringVerbatim:[{regex:"(|'|'')[^']",action:{token:"string"}},{regex:"'''",action:{token:"string.quote",next:"@pop"}}],stringLiteral:[{regex:"\\${",action:{token:"delimiter.bracket",next:"@bracketCounting"}},{regex:"[^\\\\'$]+",action:{token:"string"}},{regex:"@escapes",action:{token:"string.escape"}},{regex:"\\\\.",action:{token:"string.escape.invalid"}},{regex:"'",action:{token:"string",next:"@pop"}}],bracketCounting:[{regex:"{",action:{token:"delimiter.bracket",next:"@bracketCounting"}},{regex:"}",action:{token:"delimiter.bracket",next:"@pop"}},{include:"expression"}],comment:[{regex:"[^\\*]+",action:{token:"comment"}},{regex:"\\*\\/",action:{token:"comment",next:"@pop"}},{regex:"[\\/*]",action:{token:"comment"}}],whitespace:[{regex:"[ \\t\\r\\n]"},{regex:"\\/\\*",action:{token:"comment",next:"@comment"}},{regex:"\\/\\/.*$",action:{token:"comment"}}],expression:[{regex:"'''",action:{token:"string.quote",next:"@stringVerbatim"}},{regex:"'",action:{token:"string.quote",next:"@stringLiteral"}},{regex:"[0-9]+",action:{token:"number"}},{regex:s,action:{cases:{"@keywords":{token:"keyword"},"@namedLiterals":{token:"keyword"},"@default":{token:"identifier"}}}}]}}},11336:(e,t,n)=>{(0,n(25552).H)({id:"cameligo",extensions:[".mligo"],aliases:["Cameligo"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,11448))})},11448:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>s,language:()=>o});var s={comments:{lineComment:"//",blockComment:["(*","*)"]},brackets:[["{","}"],["[","]"],["(",")"],["<",">"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:"<",close:">"},{open:"'",close:"'"},{open:'"',close:'"'},{open:"(*",close:"*)"}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:"<",close:">"},{open:"'",close:"'"},{open:'"',close:'"'},{open:"(*",close:"*)"}]},o={defaultToken:"",tokenPostfix:".cameligo",ignoreCase:!0,brackets:[{open:"{",close:"}",token:"delimiter.curly"},{open:"[",close:"]",token:"delimiter.square"},{open:"(",close:")",token:"delimiter.parenthesis"},{open:"<",close:">",token:"delimiter.angle"}],keywords:["abs","assert","block","Bytes","case","Crypto","Current","else","failwith","false","for","fun","if","in","let","let%entry","let%init","List","list","Map","map","match","match%nat","mod","not","operation","Operation","of","record","Set","set","sender","skip","source","String","then","to","true","type","with"],typeKeywords:["int","unit","string","tz","nat","bool"],operators:["=",">","<","<=",">=","<>",":",":=","and","mod","or","+","-","*","/","@","&","^","%","->","<-","&&","||"],symbols:/[=><:@\^&|+\-*\/\^%]+/,tokenizer:{root:[[/[a-zA-Z_][\w]*/,{cases:{"@keywords":{token:"keyword.$0"},"@default":"identifier"}}],{include:"@whitespace"},[/[{}()\[\]]/,"@brackets"],[/[<>](?!@symbols)/,"@brackets"],[/@symbols/,{cases:{"@operators":"delimiter","@default":""}}],[/\d*\.\d+([eE][\-+]?\d+)?/,"number.float"],[/\$[0-9a-fA-F]{1,16}/,"number.hex"],[/\d+/,"number"],[/[;,.]/,"delimiter"],[/'([^'\\]|\\.)*$/,"string.invalid"],[/'/,"string","@string"],[/'[^\\']'/,"string"],[/'/,"string.invalid"],[/\#\d+/,"string"]],comment:[[/[^\(\*]+/,"comment"],[/\*\)/,"comment","@pop"],[/\(\*/,"comment"]],string:[[/[^\\']+/,"string"],[/\\./,"string.escape.invalid"],[/'/,{token:"string.quote",bracket:"@close",next:"@pop"}]],whitespace:[[/[ \t\r\n]+/,"white"],[/\(\*/,"comment","@comment"],[/\/\/.*$/,"comment"]]}}},76334:(e,t,n)=>{(0,n(25552).H)({id:"clojure",extensions:[".clj",".cljs",".cljc",".edn"],aliases:["clojure","Clojure"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,33036))})},33036:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>s,language:()=>o});var s={comments:{lineComment:";;"},brackets:[["[","]"],["(",")"],["{","}"]],autoClosingPairs:[{open:"[",close:"]"},{open:'"',close:'"'},{open:"(",close:")"},{open:"{",close:"}"}],surroundingPairs:[{open:"[",close:"]"},{open:'"',close:'"'},{open:"(",close:")"},{open:"{",close:"}"}]},o={defaultToken:"",ignoreCase:!0,tokenPostfix:".clj",brackets:[{open:"[",close:"]",token:"delimiter.square"},{open:"(",close:")",token:"delimiter.parenthesis"},{open:"{",close:"}",token:"delimiter.curly"}],constants:["true","false","nil"],numbers:/^(?:[+\-]?\d+(?:(?:N|(?:[eE][+\-]?\d+))|(?:\.?\d*(?:M|(?:[eE][+\-]?\d+))?)|\/\d+|[xX][0-9a-fA-F]+|r[0-9a-zA-Z]+)?(?=[\\\[\]\s"#'(),;@^`{}~]|$))/,characters:/^(?:\\(?:backspace|formfeed|newline|return|space|tab|o[0-7]{3}|u[0-9A-Fa-f]{4}|x[0-9A-Fa-f]{4}|.)?(?=[\\\[\]\s"(),;@^`{}~]|$))/,escapes:/^\\(?:["'\\bfnrt]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,qualifiedSymbols:/^(?:(?:[^\\\/\[\]\d\s"#'(),;@^`{}~][^\\\[\]\s"(),;@^`{}~]*(?:\.[^\\\/\[\]\d\s"#'(),;@^`{}~][^\\\[\]\s"(),;@^`{}~]*)*\/)?(?:\/|[^\\\/\[\]\d\s"#'(),;@^`{}~][^\\\[\]\s"(),;@^`{}~]*)*(?=[\\\[\]\s"(),;@^`{}~]|$))/,specialForms:[".","catch","def","do","if","monitor-enter","monitor-exit","new","quote","recur","set!","throw","try","var"],coreSymbols:["*","*'","*1","*2","*3","*agent*","*allow-unresolved-vars*","*assert*","*clojure-version*","*command-line-args*","*compile-files*","*compile-path*","*compiler-options*","*data-readers*","*default-data-reader-fn*","*e","*err*","*file*","*flush-on-newline*","*fn-loader*","*in*","*math-context*","*ns*","*out*","*print-dup*","*print-length*","*print-level*","*print-meta*","*print-namespace-maps*","*print-readably*","*read-eval*","*reader-resolver*","*source-path*","*suppress-read*","*unchecked-math*","*use-context-classloader*","*verbose-defrecords*","*warn-on-reflection*","+","+'","-","-'","->","->>","->ArrayChunk","->Eduction","->Vec","->VecNode","->VecSeq","-cache-protocol-fn","-reset-methods","..","/","<","<=","=","==",">",">=","EMPTY-NODE","Inst","StackTraceElement->vec","Throwable->map","accessor","aclone","add-classpath","add-watch","agent","agent-error","agent-errors","aget","alength","alias","all-ns","alter","alter-meta!","alter-var-root","amap","ancestors","and","any?","apply","areduce","array-map","as->","aset","aset-boolean","aset-byte","aset-char","aset-double","aset-float","aset-int","aset-long","aset-short","assert","assoc","assoc!","assoc-in","associative?","atom","await","await-for","await1","bases","bean","bigdec","bigint","biginteger","binding","bit-and","bit-and-not","bit-clear","bit-flip","bit-not","bit-or","bit-set","bit-shift-left","bit-shift-right","bit-test","bit-xor","boolean","boolean-array","boolean?","booleans","bound-fn","bound-fn*","bound?","bounded-count","butlast","byte","byte-array","bytes","bytes?","case","cast","cat","char","char-array","char-escape-string","char-name-string","char?","chars","chunk","chunk-append","chunk-buffer","chunk-cons","chunk-first","chunk-next","chunk-rest","chunked-seq?","class","class?","clear-agent-errors","clojure-version","coll?","comment","commute","comp","comparator","compare","compare-and-set!","compile","complement","completing","concat","cond","cond->","cond->>","condp","conj","conj!","cons","constantly","construct-proxy","contains?","count","counted?","create-ns","create-struct","cycle","dec","dec'","decimal?","declare","dedupe","default-data-readers","definline","definterface","defmacro","defmethod","defmulti","defn","defn-","defonce","defprotocol","defrecord","defstruct","deftype","delay","delay?","deliver","denominator","deref","derive","descendants","destructure","disj","disj!","dissoc","dissoc!","distinct","distinct?","doall","dorun","doseq","dosync","dotimes","doto","double","double-array","double?","doubles","drop","drop-last","drop-while","eduction","empty","empty?","ensure","ensure-reduced","enumeration-seq","error-handler","error-mode","eval","even?","every-pred","every?","ex-data","ex-info","extend","extend-protocol","extend-type","extenders","extends?","false?","ffirst","file-seq","filter","filterv","find","find-keyword","find-ns","find-protocol-impl","find-protocol-method","find-var","first","flatten","float","float-array","float?","floats","flush","fn","fn?","fnext","fnil","for","force","format","frequencies","future","future-call","future-cancel","future-cancelled?","future-done?","future?","gen-class","gen-interface","gensym","get","get-in","get-method","get-proxy-class","get-thread-bindings","get-validator","group-by","halt-when","hash","hash-combine","hash-map","hash-ordered-coll","hash-set","hash-unordered-coll","ident?","identical?","identity","if-let","if-not","if-some","ifn?","import","in-ns","inc","inc'","indexed?","init-proxy","inst-ms","inst-ms*","inst?","instance?","int","int-array","int?","integer?","interleave","intern","interpose","into","into-array","ints","io!","isa?","iterate","iterator-seq","juxt","keep","keep-indexed","key","keys","keyword","keyword?","last","lazy-cat","lazy-seq","let","letfn","line-seq","list","list*","list?","load","load-file","load-reader","load-string","loaded-libs","locking","long","long-array","longs","loop","macroexpand","macroexpand-1","make-array","make-hierarchy","map","map-entry?","map-indexed","map?","mapcat","mapv","max","max-key","memfn","memoize","merge","merge-with","meta","method-sig","methods","min","min-key","mix-collection-hash","mod","munge","name","namespace","namespace-munge","nat-int?","neg-int?","neg?","newline","next","nfirst","nil?","nnext","not","not-any?","not-empty","not-every?","not=","ns","ns-aliases","ns-imports","ns-interns","ns-map","ns-name","ns-publics","ns-refers","ns-resolve","ns-unalias","ns-unmap","nth","nthnext","nthrest","num","number?","numerator","object-array","odd?","or","parents","partial","partition","partition-all","partition-by","pcalls","peek","persistent!","pmap","pop","pop!","pop-thread-bindings","pos-int?","pos?","pr","pr-str","prefer-method","prefers","primitives-classnames","print","print-ctor","print-dup","print-method","print-simple","print-str","printf","println","println-str","prn","prn-str","promise","proxy","proxy-call-with-super","proxy-mappings","proxy-name","proxy-super","push-thread-bindings","pvalues","qualified-ident?","qualified-keyword?","qualified-symbol?","quot","rand","rand-int","rand-nth","random-sample","range","ratio?","rational?","rationalize","re-find","re-groups","re-matcher","re-matches","re-pattern","re-seq","read","read-line","read-string","reader-conditional","reader-conditional?","realized?","record?","reduce","reduce-kv","reduced","reduced?","reductions","ref","ref-history-count","ref-max-history","ref-min-history","ref-set","refer","refer-clojure","reify","release-pending-sends","rem","remove","remove-all-methods","remove-method","remove-ns","remove-watch","repeat","repeatedly","replace","replicate","require","reset!","reset-meta!","reset-vals!","resolve","rest","restart-agent","resultset-seq","reverse","reversible?","rseq","rsubseq","run!","satisfies?","second","select-keys","send","send-off","send-via","seq","seq?","seqable?","seque","sequence","sequential?","set","set-agent-send-executor!","set-agent-send-off-executor!","set-error-handler!","set-error-mode!","set-validator!","set?","short","short-array","shorts","shuffle","shutdown-agents","simple-ident?","simple-keyword?","simple-symbol?","slurp","some","some->","some->>","some-fn","some?","sort","sort-by","sorted-map","sorted-map-by","sorted-set","sorted-set-by","sorted?","special-symbol?","spit","split-at","split-with","str","string?","struct","struct-map","subs","subseq","subvec","supers","swap!","swap-vals!","symbol","symbol?","sync","tagged-literal","tagged-literal?","take","take-last","take-nth","take-while","test","the-ns","thread-bound?","time","to-array","to-array-2d","trampoline","transduce","transient","tree-seq","true?","type","unchecked-add","unchecked-add-int","unchecked-byte","unchecked-char","unchecked-dec","unchecked-dec-int","unchecked-divide-int","unchecked-double","unchecked-float","unchecked-inc","unchecked-inc-int","unchecked-int","unchecked-long","unchecked-multiply","unchecked-multiply-int","unchecked-negate","unchecked-negate-int","unchecked-remainder-int","unchecked-short","unchecked-subtract","unchecked-subtract-int","underive","unquote","unquote-splicing","unreduced","unsigned-bit-shift-right","update","update-in","update-proxy","uri?","use","uuid?","val","vals","var-get","var-set","var?","vary-meta","vec","vector","vector-of","vector?","volatile!","volatile?","vreset!","vswap!","when","when-first","when-let","when-not","when-some","while","with-bindings","with-bindings*","with-in-str","with-loading-context","with-local-vars","with-meta","with-open","with-out-str","with-precision","with-redefs","with-redefs-fn","xml-seq","zero?","zipmap"],tokenizer:{root:[{include:"@whitespace"},[/@numbers/,"number"],[/@characters/,"string"],{include:"@string"},[/[()\[\]{}]/,"@brackets"],[/\/#"(?:\.|(?:")|[^"\n])*"\/g/,"regexp"],[/[#'@^`~]/,"meta"],[/@qualifiedSymbols/,{cases:{"^:.+$":"constant","@specialForms":"keyword","@coreSymbols":"keyword","@constants":"constant","@default":"identifier"}}]],whitespace:[[/[\s,]+/,"white"],[/;.*$/,"comment"],[/\(comment\b/,"comment","@comment"]],comment:[[/\(/,"comment","@push"],[/\)/,"comment","@pop"],[/[^()]/,"comment"]],string:[[/"/,"string","@multiLineString"]],multiLineString:[[/"/,"string","@popall"],[/@escapes/,"string.escape"],[/./,"string"]]}}},30253:(e,t,n)=>{(0,n(25552).H)({id:"coffeescript",extensions:[".coffee"],aliases:["CoffeeScript","coffeescript","coffee"],mimetypes:["text/x-coffeescript","text/coffeescript"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,21147))})},21147:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>s,language:()=>o});var s={wordPattern:/(-?\d*\.\d\w*)|([^\`\~\!\@\#%\^\&\*\(\)\=\$\-\+\[\{\]\}\\\|\;\:\'\"\,\.\<\>\/\?\s]+)/g,comments:{blockComment:["###","###"],lineComment:"#"},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}],folding:{markers:{start:new RegExp("^\\s*#region\\b"),end:new RegExp("^\\s*#endregion\\b")}}},o={defaultToken:"",ignoreCase:!0,tokenPostfix:".coffee",brackets:[{open:"{",close:"}",token:"delimiter.curly"},{open:"[",close:"]",token:"delimiter.square"},{open:"(",close:")",token:"delimiter.parenthesis"}],regEx:/\/(?!\/\/)(?:[^\/\\]|\\.)*\/[igm]*/,keywords:["and","or","is","isnt","not","on","yes","@","no","off","true","false","null","this","new","delete","typeof","in","instanceof","return","throw","break","continue","debugger","if","else","switch","for","while","do","try","catch","finally","class","extends","super","undefined","then","unless","until","loop","of","by","when"],symbols:/[=><!~?&%|+\-*\/\^\.,\:]+/,escapes:/\\(?:[abfnrtv\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,tokenizer:{root:[[/\@[a-zA-Z_]\w*/,"variable.predefined"],[/[a-zA-Z_]\w*/,{cases:{this:"variable.predefined","@keywords":{token:"keyword.$0"},"@default":""}}],[/[ \t\r\n]+/,""],[/###/,"comment","@comment"],[/#.*$/,"comment"],["///",{token:"regexp",next:"@hereregexp"}],[/^(\s*)(@regEx)/,["","regexp"]],[/(\()(\s*)(@regEx)/,["@brackets","","regexp"]],[/(\,)(\s*)(@regEx)/,["delimiter","","regexp"]],[/(\=)(\s*)(@regEx)/,["delimiter","","regexp"]],[/(\:)(\s*)(@regEx)/,["delimiter","","regexp"]],[/(\[)(\s*)(@regEx)/,["@brackets","","regexp"]],[/(\!)(\s*)(@regEx)/,["delimiter","","regexp"]],[/(\&)(\s*)(@regEx)/,["delimiter","","regexp"]],[/(\|)(\s*)(@regEx)/,["delimiter","","regexp"]],[/(\?)(\s*)(@regEx)/,["delimiter","","regexp"]],[/(\{)(\s*)(@regEx)/,["@brackets","","regexp"]],[/(\;)(\s*)(@regEx)/,["","","regexp"]],[/}/,{cases:{"$S2==interpolatedstring":{token:"string",next:"@pop"},"@default":"@brackets"}}],[/[{}()\[\]]/,"@brackets"],[/@symbols/,"delimiter"],[/\d+[eE]([\-+]?\d+)?/,"number.float"],[/\d+\.\d+([eE][\-+]?\d+)?/,"number.float"],[/0[xX][0-9a-fA-F]+/,"number.hex"],[/0[0-7]+(?!\d)/,"number.octal"],[/\d+/,"number"],[/[,.]/,"delimiter"],[/"""/,"string",'@herestring."""'],[/'''/,"string","@herestring.'''"],[/"/,{cases:{"@eos":"string","@default":{token:"string",next:'@string."'}}}],[/'/,{cases:{"@eos":"string","@default":{token:"string",next:"@string.'"}}}]],string:[[/[^"'\#\\]+/,"string"],[/@escapes/,"string.escape"],[/\./,"string.escape.invalid"],[/\./,"string.escape.invalid"],[/#{/,{cases:{'$S2=="':{token:"string",next:"root.interpolatedstring"},"@default":"string"}}],[/["']/,{cases:{"$#==$S2":{token:"string",next:"@pop"},"@default":"string"}}],[/#/,"string"]],herestring:[[/("""|''')/,{cases:{"$1==$S2":{token:"string",next:"@pop"},"@default":"string"}}],[/[^#\\'"]+/,"string"],[/['"]+/,"string"],[/@escapes/,"string.escape"],[/\./,"string.escape.invalid"],[/#{/,{token:"string.quote",next:"root.interpolatedstring"}],[/#/,"string"]],comment:[[/[^#]+/,"comment"],[/###/,"comment","@pop"],[/#/,"comment"]],hereregexp:[[/[^\\\/#]+/,"regexp"],[/\\./,"regexp"],[/#.*$/,"comment"],["///[igm]*",{token:"regexp",next:"@pop"}],[/\//,"regexp"]]}}},47940:(e,t,n)=>{var s=n(25552);(0,s.H)({id:"c",extensions:[".c",".h"],aliases:["C","c"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,71960))}),(0,s.H)({id:"cpp",extensions:[".cpp",".cc",".cxx",".hpp",".hh",".hxx"],aliases:["C++","Cpp","cpp"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,71960))})},71960:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>s,language:()=>o});var s={comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"[",close:"]"},{open:"{",close:"}"},{open:"(",close:")"},{open:"'",close:"'",notIn:["string","comment"]},{open:'"',close:'"',notIn:["string"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}],folding:{markers:{start:new RegExp("^\\s*#pragma\\s+region\\b"),end:new RegExp("^\\s*#pragma\\s+endregion\\b")}}},o={defaultToken:"",tokenPostfix:".cpp",brackets:[{token:"delimiter.curly",open:"{",close:"}"},{token:"delimiter.parenthesis",open:"(",close:")"},{token:"delimiter.square",open:"[",close:"]"},{token:"delimiter.angle",open:"<",close:">"}],keywords:["abstract","amp","array","auto","bool","break","case","catch","char","class","const","constexpr","const_cast","continue","cpu","decltype","default","delegate","delete","do","double","dynamic_cast","each","else","enum","event","explicit","export","extern","false","final","finally","float","for","friend","gcnew","generic","goto","if","in","initonly","inline","int","interface","interior_ptr","internal","literal","long","mutable","namespace","new","noexcept","nullptr","__nullptr","operator","override","partial","pascal","pin_ptr","private","property","protected","public","ref","register","reinterpret_cast","restrict","return","safe_cast","sealed","short","signed","sizeof","static","static_assert","static_cast","struct","switch","template","this","thread_local","throw","tile_static","true","try","typedef","typeid","typename","union","unsigned","using","virtual","void","volatile","wchar_t","where","while","_asm","_based","_cdecl","_declspec","_fastcall","_if_exists","_if_not_exists","_inline","_multiple_inheritance","_pascal","_single_inheritance","_stdcall","_virtual_inheritance","_w64","__abstract","__alignof","__asm","__assume","__based","__box","__builtin_alignof","__cdecl","__clrcall","__declspec","__delegate","__event","__except","__fastcall","__finally","__forceinline","__gc","__hook","__identifier","__if_exists","__if_not_exists","__inline","__int128","__int16","__int32","__int64","__int8","__interface","__leave","__m128","__m128d","__m128i","__m256","__m256d","__m256i","__m512","__m512d","__m512i","__m64","__multiple_inheritance","__newslot","__nogc","__noop","__nounwind","__novtordisp","__pascal","__pin","__pragma","__property","__ptr32","__ptr64","__raise","__restrict","__resume","__sealed","__single_inheritance","__stdcall","__super","__thiscall","__try","__try_cast","__typeof","__unaligned","__unhook","__uuidof","__value","__virtual_inheritance","__w64","__wchar_t"],operators:["=",">","<","!","~","?",":","==","<=",">=","!=","&&","||","++","--","+","-","*","/","&","|","^","%","<<",">>","+=","-=","*=","/=","&=","|=","^=","%=","<<=",">>="],symbols:/[=><!~?:&|+\-*\/\^%]+/,escapes:/\\(?:[0abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,integersuffix:/([uU](ll|LL|l|L)|(ll|LL|l|L)?[uU]?)/,floatsuffix:/[fFlL]?/,encoding:/u|u8|U|L/,tokenizer:{root:[[/@encoding?R\"(?:([^ ()\\\t]*))\(/,{token:"string.raw.begin",next:"@raw.$1"}],[/[a-zA-Z_]\w*/,{cases:{"@keywords":{token:"keyword.$0"},"@default":"identifier"}}],[/^\s*#\s*include/,{token:"keyword.directive.include",next:"@include"}],[/^\s*#\s*\w+/,"keyword.directive"],{include:"@whitespace"},[/\[\s*\[/,{token:"annotation",next:"@annotation"}],[/[{}()<>\[\]]/,"@brackets"],[/@symbols/,{cases:{"@operators":"delimiter","@default":""}}],[/\d*\d+[eE]([\-+]?\d+)?(@floatsuffix)/,"number.float"],[/\d*\.\d+([eE][\-+]?\d+)?(@floatsuffix)/,"number.float"],[/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/,"number.hex"],[/0[0-7']*[0-7](@integersuffix)/,"number.octal"],[/0[bB][0-1']*[0-1](@integersuffix)/,"number.binary"],[/\d[\d']*\d(@integersuffix)/,"number"],[/\d(@integersuffix)/,"number"],[/[;,.]/,"delimiter"],[/"([^"\\]|\\.)*$/,"string.invalid"],[/"/,"string","@string"],[/'[^\\']'/,"string"],[/(')(@escapes)(')/,["string","string.escape","string"]],[/'/,"string.invalid"]],whitespace:[[/[ \t\r\n]+/,""],[/\/\*\*(?!\/)/,"comment.doc","@doccomment"],[/\/\*/,"comment","@comment"],[/\/\/.*\\$/,"comment","@linecomment"],[/\/\/.*$/,"comment"]],comment:[[/[^\/*]+/,"comment"],[/\*\//,"comment","@pop"],[/[\/*]/,"comment"]],linecomment:[[/.*[^\\]$/,"comment","@pop"],[/[^]+/,"comment"]],doccomment:[[/[^\/*]+/,"comment.doc"],[/\*\//,"comment.doc","@pop"],[/[\/*]/,"comment.doc"]],string:[[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"/,"string","@pop"]],raw:[[/[^)]+/,"string.raw"],[/\)$S2\"/,{token:"string.raw.end",next:"@pop"}],[/\)/,"string.raw"]],annotation:[{include:"@whitespace"},[/using|alignas/,"keyword"],[/[a-zA-Z0-9_]+/,"annotation"],[/[,:]/,"delimiter"],[/[()]/,"@brackets"],[/\]\s*\]/,{token:"annotation",next:"@pop"}]],include:[[/(\s*)(<)([^<>]*)(>)/,["","keyword.directive.include.begin","string.include.identifier",{token:"keyword.directive.include.end",next:"@pop"}]],[/(\s*)(")([^"]*)(")/,["","keyword.directive.include.begin","string.include.identifier",{token:"keyword.directive.include.end",next:"@pop"}]]]}}},18162:(e,t,n)=>{(0,n(25552).H)({id:"csharp",extensions:[".cs",".csx",".cake"],aliases:["C#","csharp"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,18719))})},18719:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>s,language:()=>o});var s={wordPattern:/(-?\d*\.\d\w*)|([^\`\~\!\#\$\%\^\&\*\(\)\-\=\+\[\{\]\}\\\|\;\:\'\"\,\.\<\>\/\?\s]+)/g,comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:"'",close:"'",notIn:["string","comment"]},{open:'"',close:'"',notIn:["string","comment"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:"<",close:">"},{open:"'",close:"'"},{open:'"',close:'"'}],folding:{markers:{start:new RegExp("^\\s*#region\\b"),end:new RegExp("^\\s*#endregion\\b")}}},o={defaultToken:"",tokenPostfix:".cs",brackets:[{open:"{",close:"}",token:"delimiter.curly"},{open:"[",close:"]",token:"delimiter.square"},{open:"(",close:")",token:"delimiter.parenthesis"},{open:"<",close:">",token:"delimiter.angle"}],keywords:["extern","alias","using","bool","decimal","sbyte","byte","short","ushort","int","uint","long","ulong","char","float","double","object","dynamic","string","assembly","is","as","ref","out","this","base","new","typeof","void","checked","unchecked","default","delegate","var","const","if","else","switch","case","while","do","for","foreach","in","break","continue","goto","return","throw","try","catch","finally","lock","yield","from","let","where","join","on","equals","into","orderby","ascending","descending","select","group","by","namespace","partial","class","field","event","method","param","public","protected","internal","private","abstract","sealed","static","struct","readonly","volatile","virtual","override","params","get","set","add","remove","operator","true","false","implicit","explicit","interface","enum","null","async","await","fixed","sizeof","stackalloc","unsafe","nameof","when"],namespaceFollows:["namespace","using"],parenFollows:["if","for","while","switch","foreach","using","catch","when"],operators:["=","??","||","&&","|","^","&","==","!=","<=",">=","<<","+","-","*","/","%","!","~","++","--","+=","-=","*=","/=","%=","&=","|=","^=","<<=",">>=",">>","=>"],symbols:/[=><!~?:&|+\-*\/\^%]+/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,tokenizer:{root:[[/\@?[a-zA-Z_]\w*/,{cases:{"@namespaceFollows":{token:"keyword.$0",next:"@namespace"},"@keywords":{token:"keyword.$0",next:"@qualified"},"@default":{token:"identifier",next:"@qualified"}}}],{include:"@whitespace"},[/}/,{cases:{"$S2==interpolatedstring":{token:"string.quote",next:"@pop"},"$S2==litinterpstring":{token:"string.quote",next:"@pop"},"@default":"@brackets"}}],[/[{}()\[\]]/,"@brackets"],[/[<>](?!@symbols)/,"@brackets"],[/@symbols/,{cases:{"@operators":"delimiter","@default":""}}],[/[0-9_]*\.[0-9_]+([eE][\-+]?\d+)?[fFdD]?/,"number.float"],[/0[xX][0-9a-fA-F_]+/,"number.hex"],[/0[bB][01_]+/,"number.hex"],[/[0-9_]+/,"number"],[/[;,.]/,"delimiter"],[/"([^"\\]|\\.)*$/,"string.invalid"],[/"/,{token:"string.quote",next:"@string"}],[/\$\@"/,{token:"string.quote",next:"@litinterpstring"}],[/\@"/,{token:"string.quote",next:"@litstring"}],[/\$"/,{token:"string.quote",next:"@interpolatedstring"}],[/'[^\\']'/,"string"],[/(')(@escapes)(')/,["string","string.escape","string"]],[/'/,"string.invalid"]],qualified:[[/[a-zA-Z_][\w]*/,{cases:{"@keywords":{token:"keyword.$0"},"@default":"identifier"}}],[/\./,"delimiter"],["","","@pop"]],namespace:[{include:"@whitespace"},[/[A-Z]\w*/,"namespace"],[/[\.=]/,"delimiter"],["","","@pop"]],comment:[[/[^\/*]+/,"comment"],["\\*/","comment","@pop"],[/[\/*]/,"comment"]],string:[[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"/,{token:"string.quote",next:"@pop"}]],litstring:[[/[^"]+/,"string"],[/""/,"string.escape"],[/"/,{token:"string.quote",next:"@pop"}]],litinterpstring:[[/[^"{]+/,"string"],[/""/,"string.escape"],[/{{/,"string.escape"],[/}}/,"string.escape"],[/{/,{token:"string.quote",next:"root.litinterpstring"}],[/"/,{token:"string.quote",next:"@pop"}]],interpolatedstring:[[/[^\\"{]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/{{/,"string.escape"],[/}}/,"string.escape"],[/{/,{token:"string.quote",next:"root.interpolatedstring"}],[/"/,{token:"string.quote",next:"@pop"}]],whitespace:[[/^[ \t\v\f]*#((r)|(load))(?=\s)/,"directive.csx"],[/^[ \t\v\f]*#\w.*$/,"namespace.cpp"],[/[ \t\v\f\r\n]+/,""],[/\/\*/,"comment","@comment"],[/\/\/.*$/,"comment"]]}}},79556:(e,t,n)=>{(0,n(25552).H)({id:"csp",extensions:[".csp"],aliases:["CSP","csp"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,68946))})},68946:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>s,language:()=>o});var s={brackets:[],autoClosingPairs:[],surroundingPairs:[]},o={keywords:[],typeKeywords:[],tokenPostfix:".csp",operators:[],symbols:/[=><!~?:&|+\-*\/\^%]+/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,tokenizer:{root:[[/child-src/,"string.quote"],[/connect-src/,"string.quote"],[/default-src/,"string.quote"],[/font-src/,"string.quote"],[/frame-src/,"string.quote"],[/img-src/,"string.quote"],[/manifest-src/,"string.quote"],[/media-src/,"string.quote"],[/object-src/,"string.quote"],[/script-src/,"string.quote"],[/style-src/,"string.quote"],[/worker-src/,"string.quote"],[/base-uri/,"string.quote"],[/plugin-types/,"string.quote"],[/sandbox/,"string.quote"],[/disown-opener/,"string.quote"],[/form-action/,"string.quote"],[/frame-ancestors/,"string.quote"],[/report-uri/,"string.quote"],[/report-to/,"string.quote"],[/upgrade-insecure-requests/,"string.quote"],[/block-all-mixed-content/,"string.quote"],[/require-sri-for/,"string.quote"],[/reflected-xss/,"string.quote"],[/referrer/,"string.quote"],[/policy-uri/,"string.quote"],[/'self'/,"string.quote"],[/'unsafe-inline'/,"string.quote"],[/'unsafe-eval'/,"string.quote"],[/'strict-dynamic'/,"string.quote"],[/'unsafe-hashed-attributes'/,"string.quote"]]}}},56292:(e,t,n)=>{(0,n(25552).H)({id:"css",extensions:[".css"],aliases:["CSS","css"],mimetypes:["text/css"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,62075))})},62075:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>s,language:()=>o});var s={wordPattern:/(#?-?\d*\.\d\w*%?)|((::|[@#.!:])?[\w-?]+%?)|::|[@#.!:]/g,comments:{blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}",notIn:["string","comment"]},{open:"[",close:"]",notIn:["string","comment"]},{open:"(",close:")",notIn:["string","comment"]},{open:'"',close:'"',notIn:["string","comment"]},{open:"'",close:"'",notIn:["string","comment"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}],folding:{markers:{start:new RegExp("^\\s*\\/\\*\\s*#region\\b\\s*(.*?)\\s*\\*\\/"),end:new RegExp("^\\s*\\/\\*\\s*#endregion\\b.*\\*\\/")}}},o={defaultToken:"",tokenPostfix:".css",ws:"[ \t\n\r\f]*",identifier:"-?-?([a-zA-Z]|(\\\\(([0-9a-fA-F]{1,6}\\s?)|[^[0-9a-fA-F])))([\\w\\-]|(\\\\(([0-9a-fA-F]{1,6}\\s?)|[^[0-9a-fA-F])))*",brackets:[{open:"{",close:"}",token:"delimiter.bracket"},{open:"[",close:"]",token:"delimiter.bracket"},{open:"(",close:")",token:"delimiter.parenthesis"},{open:"<",close:">",token:"delimiter.angle"}],tokenizer:{root:[{include:"@selector"}],selector:[{include:"@comments"},{include:"@import"},{include:"@strings"},["[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)",{token:"keyword",next:"@keyframedeclaration"}],["[@](page|content|font-face|-moz-document)",{token:"keyword"}],["[@](charset|namespace)",{token:"keyword",next:"@declarationbody"}],["(url-prefix)(\\()",["attribute.value",{token:"delimiter.parenthesis",next:"@urldeclaration"}]],["(url)(\\()",["attribute.value",{token:"delimiter.parenthesis",next:"@urldeclaration"}]],{include:"@selectorname"},["[\\*]","tag"],["[>\\+,]","delimiter"],["\\[",{token:"delimiter.bracket",next:"@selectorattribute"}],["{",{token:"delimiter.bracket",next:"@selectorbody"}]],selectorbody:[{include:"@comments"},["[*_]?@identifier@ws:(?=(\\s|\\d|[^{;}]*[;}]))","attribute.name","@rulevalue"],["}",{token:"delimiter.bracket",next:"@pop"}]],selectorname:[["(\\.|#(?=[^{])|%|(@identifier)|:)+","tag"]],selectorattribute:[{include:"@term"},["]",{token:"delimiter.bracket",next:"@pop"}]],term:[{include:"@comments"},["(url-prefix)(\\()",["attribute.value",{token:"delimiter.parenthesis",next:"@urldeclaration"}]],["(url)(\\()",["attribute.value",{token:"delimiter.parenthesis",next:"@urldeclaration"}]],{include:"@functioninvocation"},{include:"@numbers"},{include:"@name"},{include:"@strings"},["([<>=\\+\\-\\*\\/\\^\\|\\~,])","delimiter"],[",","delimiter"]],rulevalue:[{include:"@comments"},{include:"@strings"},{include:"@term"},["!important","keyword"],[";","delimiter","@pop"],["(?=})",{token:"",next:"@pop"}]],warndebug:[["[@](warn|debug)",{token:"keyword",next:"@declarationbody"}]],import:[["[@](import)",{token:"keyword",next:"@declarationbody"}]],urldeclaration:[{include:"@strings"},["[^)\r\n]+","string"],["\\)",{token:"delimiter.parenthesis",next:"@pop"}]],parenthizedterm:[{include:"@term"},["\\)",{token:"delimiter.parenthesis",next:"@pop"}]],declarationbody:[{include:"@term"},[";","delimiter","@pop"],["(?=})",{token:"",next:"@pop"}]],comments:[["\\/\\*","comment","@comment"],["\\/\\/+.*","comment"]],comment:[["\\*\\/","comment","@pop"],[/[^*/]+/,"comment"],[/./,"comment"]],name:[["@identifier","attribute.value"]],numbers:[["-?(\\d*\\.)?\\d+([eE][\\-+]?\\d+)?",{token:"attribute.value.number",next:"@units"}],["#[0-9a-fA-F_]+(?!\\w)","attribute.value.hex"]],units:[["(em|ex|ch|rem|fr|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?","attribute.value.unit","@pop"]],keyframedeclaration:[["@identifier","attribute.value"],["{",{token:"delimiter.bracket",switchTo:"@keyframebody"}]],keyframebody:[{include:"@term"},["{",{token:"delimiter.bracket",next:"@selectorbody"}],["}",{token:"delimiter.bracket",next:"@pop"}]],functioninvocation:[["@identifier\\(",{token:"attribute.value",next:"@functionarguments"}]],functionarguments:[["\\$@identifier@ws:","attribute.name"],["[,]","delimiter"],{include:"@term"},["\\)",{token:"attribute.value",next:"@pop"}]],strings:[['~?"',{token:"string",next:"@stringenddoublequote"}],["~?'",{token:"string",next:"@stringendquote"}]],stringenddoublequote:[["\\\\.","string"],['"',{token:"string",next:"@pop"}],[/[^\\"]+/,"string"],[".","string"]],stringendquote:[["\\\\.","string"],["'",{token:"string",next:"@pop"}],[/[^\\']+/,"string"],[".","string"]]}}},30282:(e,t,n)=>{(0,n(25552).H)({id:"cypher",extensions:[".cypher",".cyp"],aliases:["Cypher","OpenCypher"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,62395))})},62395:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>s,language:()=>o});var s={comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"`",close:"`"}]},o={defaultToken:"",tokenPostfix:".cypher",ignoreCase:!0,brackets:[{open:"{",close:"}",token:"delimiter.curly"},{open:"[",close:"]",token:"delimiter.bracket"},{open:"(",close:")",token:"delimiter.parenthesis"}],keywords:["ALL","AND","AS","ASC","ASCENDING","BY","CALL","CASE","CONTAINS","CREATE","DELETE","DESC","DESCENDING","DETACH","DISTINCT","ELSE","END","ENDS","EXISTS","IN","IS","LIMIT","MANDATORY","MATCH","MERGE","NOT","ON","ON","OPTIONAL","OR","ORDER","REMOVE","RETURN","SET","SKIP","STARTS","THEN","UNION","UNWIND","WHEN","WHERE","WITH","XOR","YIELD"],builtinLiterals:["true","TRUE","false","FALSE","null","NULL"],builtinFunctions:["abs","acos","asin","atan","atan2","avg","ceil","coalesce","collect","cos","cot","count","degrees","e","endNode","exists","exp","floor","head","id","keys","labels","last","left","length","log","log10","lTrim","max","min","nodes","percentileCont","percentileDisc","pi","properties","radians","rand","range","relationships","replace","reverse","right","round","rTrim","sign","sin","size","split","sqrt","startNode","stDev","stDevP","substring","sum","tail","tan","timestamp","toBoolean","toFloat","toInteger","toLower","toString","toUpper","trim","type"],operators:["+","-","*","/","%","^","=","<>","<",">","<=",">=","->","<-","--\x3e","<--"],escapes:/\\(?:[tbnrf\\"'`]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,digits:/\d+/,octaldigits:/[0-7]+/,hexdigits:/[0-9a-fA-F]+/,tokenizer:{root:[[/[{}[\]()]/,"@brackets"],{include:"common"}],common:[{include:"@whitespace"},{include:"@numbers"},{include:"@strings"},[/:[a-zA-Z_][\w]*/,"type.identifier"],[/[a-zA-Z_][\w]*(?=\()/,{cases:{"@builtinFunctions":"predefined.function"}}],[/[a-zA-Z_$][\w$]*/,{cases:{"@keywords":"keyword","@builtinLiterals":"predefined.literal","@default":"identifier"}}],[/`/,"identifier.escape","@identifierBacktick"],[/[;,.:|]/,"delimiter"],[/[<>=%+\-*/^]+/,{cases:{"@operators":"delimiter","@default":""}}]],numbers:[[/-?(@digits)[eE](-?(@digits))?/,"number.float"],[/-?(@digits)?\.(@digits)([eE]-?(@digits))?/,"number.float"],[/-?0x(@hexdigits)/,"number.hex"],[/-?0(@octaldigits)/,"number.octal"],[/-?(@digits)/,"number"]],strings:[[/"([^"\\]|\\.)*$/,"string.invalid"],[/'([^'\\]|\\.)*$/,"string.invalid"],[/"/,"string","@stringDouble"],[/'/,"string","@stringSingle"]],whitespace:[[/[ \t\r\n]+/,"white"],[/\/\*/,"comment","@comment"],[/\/\/.*$/,"comment"]],comment:[[/\/\/.*/,"comment"],[/[^/*]+/,"comment"],[/\*\//,"comment","@pop"],[/[/*]/,"comment"]],stringDouble:[[/[^\\"]+/,"string"],[/@escapes/,"string"],[/\\./,"string.invalid"],[/"/,"string","@pop"]],stringSingle:[[/[^\\']+/,"string"],[/@escapes/,"string"],[/\\./,"string.invalid"],[/'/,"string","@pop"]],identifierBacktick:[[/[^\\`]+/,"identifier.escape"],[/@escapes/,"identifier.escape"],[/\\./,"identifier.escape.invalid"],[/`/,"identifier.escape","@pop"]]}}},42429:(e,t,n)=>{(0,n(25552).H)({id:"dart",extensions:[".dart"],aliases:["Dart","dart"],mimetypes:["text/x-dart-source","text/x-dart"],loader:()=>Promise.all([n.e(8392),n.e(8127),n.e(8916),n.e(6338),n.e(3796),n.e(5720),n.e(5234),n.e(9223),n.e(1486),n.e(3177),n.e(7249),n.e(4202),n.e(8528),n.e(2417),n.e(4658),n.e(7898),n.e(2819),n.e(8791),n.e(7232),n.e(6770),n.e(6374),n.e(8943),n.e(1834),n.e(3291),n.e(8565),n.e(3013),n.e(5860),n.e(5906),n.e(4583),n.e(5),n.e(8656),n.e(3583),n.e(1825),n.e(7777),n.e(9958),n.e(3540),n.e(2621),n.e(4931),n.e(4764),n.e(6550),n.e(6312),n.e(7231),n.e(8181),n.e(7850),n.e(2251),n.e(1401),n.e(9070),n.e(6299),n.e(29),n.e(6567),n.e(124),n.e(4067),n.e(9189),n.e(583),n.e(4829),n.e(6945),n.e(198),n.e(4360),n.e(8863),n.e(6590),n.e(9912),n.e(3101),n.e(1144),n.e(6557),n.e(5068),n.e(2220),n.e(5804),n.e(4199),n.e(3896),n.e(326),n.e(3878),n.e(2258),n.e(5157),n.e(3208),n.e(8895),n.e(1844),n.e(5668),n.e(142),n.e(9490),n.e(1414),n.e(7686),n.e(1458),n.e(3432),n.e(408),n.e(8561),n.e(6189),n.e(920),n.e(6274),n.e(7799),n.e(5957),n.e(803),n.e(4950),n.e(1566),n.e(4327),n.e(3941),n.e(3021),n.e(3213),n.e(1714),n.e(6997),n.e(4078),n.e(8746),n.e(7267),n.e(7524),n.e(6810),n.e(3612),n.e(7094),n.e(5925),n.e(5394),n.e(8772),n.e(2205),n.e(9523),n.e(5169),n.e(4817),n.e(1001),n.e(4451),n.e(9901),n.e(5019),n.e(2144),n.e(3320),n.e(9126),n.e(4006),n.e(4499),n.e(8104),n.e(1545),n.e(9554),n.e(1527),n.e(317),n.e(4953),n.e(8372),n.e(834),n.e(6410),n.e(30),n.e(652),n.e(4420),n.e(6289),n.e(4913),n.e(5584),n.e(7057),n.e(5436),n.e(1872)]).then(n.bind(n,39343))})},39343:(e,t,n)=>{n.r(t),n.d(t,{conf:()=>s,language:()=>o});var s={comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:"'",close:"'",notIn:["string","comment"]},{open:'"',close:'"',notIn:["string"]},{open:"`",close:"`",notIn:["string","comment"]},{open:"/**",close:" */",notIn:["string"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:"<",close:">"},{open:"'",close:"'"},{open:"(",close:")"},{open:'"',close:'"'},{open:"`",close:"`"}],folding:{markers:{start:/^\s*\s*#?region\b/,end:/^\s*\s*#?endregion\b/}}},o={defaultToken:"invalid",tokenPostfix:".dart",keywords:["abstract","dynamic","implements","show","as","else","import","static","assert","enum","in","super","async","export","interface","switch","await","extends","is","sync","break","external","library","this","case","factory","mixin","throw","catch","false","new","true","class","final","null","try","const","finally","on","typedef","continue","for","operator","var","covariant","Function","part","void","default","get","rethrow","while","deferred","hide","return","with","do","if","set","yield"],typeKeywords:["int","double","String","bool"],operators:["+","-","*","/","~/","%","++","--","==","!=",">","<",">=","<=","=","-=","/=","%=",">>=","^=","+=","*=","~/=","<<=","&=","!=","||","&&","&","|","^","~","<<",">>","!",">>>","??","?",":","|="],symbols:/[=><!~?:&|+\-*\/\^%]+/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,digits:/\d+(_+\d+)*/,octaldigits:/[0-7]+(_+[0-7]+)*/,binarydigits:/[0-1]+(_+[0-1]+)*/,hexdigits:/[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,regexpctl:/[(){}\[\]\$\^|\-*+?\.]/,regexpesc:/\\(?:[bBdDfnrstvwWn0\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/,tokenizer:{root:[[/[{}]/,"delimiter.bracket"],{include:"common"}],common:[[/[a-z_$][\w$]*/,{cases:{"@typeKeywords":"type.identifier","@keywords":"keyword","@default":"identifier"}}],[/[A-Z_$][\w\$]*/,"type.identifier"],{include:"@whitespace"},[/\/(?=([^\\\/]|\\.)+\/([gimsuy]*)(\s*)(\.|;|,|\)|\]|\}|$))/,{token:"regexp",bracket:"@open",next:"@regexp"}],[/@[a-zA-Z]+/,"annotation"],[/[()\[\]]/,"@brackets"],[/[<>](?!@symbols)/,"@brackets"],[/!(?=([^=]|$))/,"delimiter"],[/@symbols/,{cases:{"@operators":"delimiter","@default":""}}],[/(@digits)[eE]([\-+]?(@digits))?/,"number.float"],[/(@digits)\.(@digits)([eE][\-+]?(@digits))?/,"number.float"],[/0[xX](@hexdigits)n?/,"number.hex"],[/0[oO]?(@octaldigits)n?/,"number.octal"],[/0[bB](@binarydigits)n?/,"number.binary"],[/(@digits)n?/,"number"],[/[;,.]/,"delimiter"],[/"([^"\\]|\\.)*$/,"string.invalid"],[/'([^'\\]|\\.)*$/,"string.invalid"],[/"/,"string","@string_double"],[/'/,"string","@string_single"]],whitespace:[[/[ \t\r\n]+/,""],[/\/\*\*(?!\/)/,"comment.doc","@jsdoc"],[/\/\*/,"comment","@comment"],[/\/\/\/.*$/,"comment.doc"],[/\/\/.*$/,"comment"]],comment:[[/[^\/*]+/,"comment"],[/\*\//,"comment","@pop"],[/[\/*]/,"comment"]],jsdoc:[[/[^\/*]+/,"comment.doc"],[/\*\//,"comment.doc","@pop"],[/[\/*]/,"comment.doc"]],regexp:[[/(\{)(\d+(?:,\d*)?)(\})/,["regexp.escape.control","regexp.escape.control","regexp.escape.control"]],[/(\[)(\^?)(?=(?:[^\]\\\/]|\\.)+)/,["regexp.escape.control",{token:"regexp.escape.control",next:"@regexrange"}]],[/(\()(\?:|\?=|\?!)/,["regexp.escape.control","regexp.escape.control"]],[/[()]/,"regexp.escape.control"],[/@regexpctl/,"regexp.escape.control"],[/[^\\\/]/,"regexp"],[/@regexpesc/,"regexp.escape"],[/\\\./,"regexp.invalid"],[/(\/)([gimsuy]*)/,[{token:"regexp",bracket:"@close",next:"@pop"},"keyword.other"]]],regexrange:[[/-/,"regexp.escape.control"],[/\^/,"regexp.invalid"],[/@regexpesc/,"regexp.escape"],[/[^\]]/,"regexp"],[/\]/,{token:"regexp.escape.control",next:"@pop",bracket:"@close"}]],string_double:[[/[^\\"\$]+/,"string"],[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"/,"string","@pop"],[/\$\w+/,"identifier"]],string_single:[[/[^\\'\$]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/'/,"string","@pop"],[/\$\w+/,"identifier"]]}}}}]);